/**
 * @fileoverview added by tsickle
 * Generated from: lib/moment-adapter.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgxMatDateAdapter, NGX_MAT_DATE_FORMATS } from '@angular-material-components/datetime-picker';
import { NgModule } from '@angular/core';
import { MAT_DATE_LOCALE } from '@angular/material/core';
import { NgxMatMomentAdapter, NGX_MAT_MOMENT_DATE_ADAPTER_OPTIONS } from './moment-adapter';
import { NGX_MAT_MOMENT_FORMATS } from './moment-formats';
var NgxMomentDateModule = /** @class */ (function () {
    function NgxMomentDateModule() {
    }
    NgxMomentDateModule.decorators = [
        { type: NgModule, args: [{
                    providers: [
                        {
                            provide: NgxMatDateAdapter,
                            useClass: NgxMatMomentAdapter,
                            deps: [MAT_DATE_LOCALE, NGX_MAT_MOMENT_DATE_ADAPTER_OPTIONS]
                        }
                    ],
                },] }
    ];
    return NgxMomentDateModule;
}());
export { NgxMomentDateModule };
var ɵ0 = NGX_MAT_MOMENT_FORMATS;
var NgxMatMomentModule = /** @class */ (function () {
    function NgxMatMomentModule() {
    }
    NgxMatMomentModule.decorators = [
        { type: NgModule, args: [{
                    imports: [NgxMomentDateModule],
                    providers: [{ provide: NGX_MAT_DATE_FORMATS, useValue: ɵ0 }],
                },] }
    ];
    return NgxMatMomentModule;
}());
export { NgxMatMomentModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9tZW50LWFkYXB0ZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFuZ3VsYXItbWF0ZXJpYWwtY29tcG9uZW50cy9tb21lbnQtYWRhcHRlci8iLCJzb3VyY2VzIjpbImxpYi9tb21lbnQtYWRhcHRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDdkcsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDekQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1DQUFtQyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDNUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFMUQ7SUFBQTtJQVNtQyxDQUFDOztnQkFUbkMsUUFBUSxTQUFDO29CQUNSLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixRQUFRLEVBQUUsbUJBQW1COzRCQUM3QixJQUFJLEVBQUUsQ0FBQyxlQUFlLEVBQUUsbUNBQW1DLENBQUM7eUJBQzdEO3FCQUNGO2lCQUNGOztJQUNrQywwQkFBQztDQUFBLEFBVHBDLElBU29DO1NBQXZCLG1CQUFtQjtTQUt5QixzQkFBc0I7QUFGL0U7SUFBQTtJQUlrQyxDQUFDOztnQkFKbEMsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO29CQUM5QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLElBQXdCLEVBQUUsQ0FBQztpQkFDakY7O0lBQ2lDLHlCQUFDO0NBQUEsQUFKbkMsSUFJbUM7U0FBdEIsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXHJcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuICovXHJcblxyXG5pbXBvcnQgeyBOZ3hNYXREYXRlQWRhcHRlciwgTkdYX01BVF9EQVRFX0ZPUk1BVFMgfSBmcm9tICdAYW5ndWxhci1tYXRlcmlhbC1jb21wb25lbnRzL2RhdGV0aW1lLXBpY2tlcic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1BVF9EQVRFX0xPQ0FMRSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ3hNYXRNb21lbnRBZGFwdGVyLCBOR1hfTUFUX01PTUVOVF9EQVRFX0FEQVBURVJfT1BUSU9OUyB9IGZyb20gJy4vbW9tZW50LWFkYXB0ZXInO1xyXG5pbXBvcnQgeyBOR1hfTUFUX01PTUVOVF9GT1JNQVRTIH0gZnJvbSAnLi9tb21lbnQtZm9ybWF0cyc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIHByb3ZpZGVyczogW1xyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBOZ3hNYXREYXRlQWRhcHRlcixcclxuICAgICAgdXNlQ2xhc3M6IE5neE1hdE1vbWVudEFkYXB0ZXIsXHJcbiAgICAgIGRlcHM6IFtNQVRfREFURV9MT0NBTEUsIE5HWF9NQVRfTU9NRU5UX0RBVEVfQURBUFRFUl9PUFRJT05TXVxyXG4gICAgfVxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNb21lbnREYXRlTW9kdWxlIHsgfVxyXG5cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW05neE1vbWVudERhdGVNb2R1bGVdLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogTkdYX01BVF9EQVRFX0ZPUk1BVFMsIHVzZVZhbHVlOiBOR1hfTUFUX01PTUVOVF9GT1JNQVRTIH1dLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4TWF0TW9tZW50TW9kdWxlIHsgfVxyXG4iXX0=