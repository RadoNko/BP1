{"version":3,"file":"angular2-hotkeys.js","sources":["ng://angular2-hotkeys/lib/hotkey.model.ts","ng://angular2-hotkeys/lib/hotkey.options.ts","ng://angular2-hotkeys/lib/hotkeys.service.ts","ng://angular2-hotkeys/lib/hotkeys.directive.ts","ng://angular2-hotkeys/lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component.ts","ng://angular2-hotkeys/lib/hotkey.module.ts","ng://angular2-hotkeys/public-api.ts","ng://angular2-hotkeys/angular2-hotkeys.ts"],"sourcesContent":["export interface ExtendedKeyboardEvent extends KeyboardEvent {\n    returnValue: boolean; // IE returnValue\n}\n\nexport class Hotkey {\n    private formattedHotkey: string[];\n\n    static symbolize(combo: string): string {\n        const map: any = {\n            command: '\\u2318',       // ⌘\n            shift: '\\u21E7',         // ⇧\n            left: '\\u2190',          // ←\n            right: '\\u2192',         // →\n            up: '\\u2191',            // ↑\n            down: '\\u2193',          // ↓\n            // tslint:disable-next-line:object-literal-key-quotes\n            'return': '\\u23CE',      // ⏎\n            backspace: '\\u232B'      // ⌫\n        };\n        const comboSplit: string[] = combo.split('+');\n\n        for (let i = 0; i < comboSplit.length; i++) {\n            // try to resolve command / ctrl based on OS:\n            if (comboSplit[i] === 'mod') {\n                if (window.navigator && window.navigator.platform.indexOf('Mac') >= 0) {\n                    comboSplit[i] = 'command';\n                } else {\n                    comboSplit[i] = 'ctrl';\n                }\n            }\n\n            comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n        }\n\n        return comboSplit.join(' + ');\n    }\n\n    /**\n     * Creates a new Hotkey for Mousetrap binding\n     *\n     * @param combo       mousetrap key binding\n     * @param description description for the help menu\n     * @param callback    method to call when key is pressed\n     * @param action      the type of event to listen for (for mousetrap)\n     * @param allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n     * @param persistent  if true, the binding is preserved upon route changes\n     */\n    constructor(public combo: string | string[], public callback: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent | boolean,\n                public allowIn?: string[], public description?: string | Function, public action?: string,\n                public persistent?: boolean) {\n        this.combo = (Array.isArray(combo) ? combo : [combo as string]);\n        this.allowIn = allowIn || [];\n        this.description = description || '';\n    }\n\n    get formatted(): string[] {\n        if (!this.formattedHotkey) {\n\n            const sequence: string[] = this.combo as Array<string>;\n            for (let i = 0; i < sequence.length; i++) {\n                sequence[i] = Hotkey.symbolize(sequence[i]);\n            }\n            this.formattedHotkey = sequence;\n        }\n        return this.formattedHotkey;\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface IHotkeyOptions {\n    /**\n     * Disable the cheat sheet popover dialog? Default: false\n     */\n    disableCheatSheet?: boolean;\n    /**\n     * Key combination to trigger the cheat sheet. Default: '?'\n     */\n    cheatSheetHotkey?: string;\n\n    /**\n     * Use also ESC for closing the cheat sheet. Default: false\n     */\n    cheatSheetCloseEsc?: boolean;\n    /**\n     * Description for the ESC key for closing the cheat sheet (if enabed). Default: 'Hide this help menu'\n     */\n    cheatSheetCloseEscDescription?: string;\n    /**\n     * Description for the cheat sheet hot key in the cheat sheet. Default: 'Show / hide this help menu'\n     */\n    cheatSheetDescription?: string;\n}\n\nexport const HotkeyOptions = new InjectionToken<IHotkeyOptions>('HotkeyOptions');\n","import { Inject, Injectable } from '@angular/core';\nimport { Hotkey } from './hotkey.model';\nimport { Subject } from 'rxjs';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport 'mousetrap';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    hotkeys: Hotkey[] = [];\n    pausedHotkeys: Hotkey[] = [];\n    mousetrap: MousetrapInstance;\n    cheatSheetToggle: Subject<any> = new Subject();\n\n    private preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\n\n    constructor(@Inject(HotkeyOptions) private options: IHotkeyOptions) {\n        // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n        Mousetrap.prototype.stopCallback = (event: KeyboardEvent, element: HTMLElement, combo: string, callback: Function) => {\n            // if the element has the class \"mousetrap\" then no need to stop\n            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n                return false;\n            }\n            return (element.contentEditable && element.contentEditable === 'true');\n        };\n        this.mousetrap = new (Mousetrap as any)();\n        if (!this.options.disableCheatSheet) {\n            this.add(new Hotkey(\n                this.options.cheatSheetHotkey || '?',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next();\n                }.bind(this),\n                [],\n                this.options.cheatSheetDescription || 'Show / hide this help menu',\n            ));\n        }\n\n        if (this.options.cheatSheetCloseEsc) {\n            this.add(new Hotkey(\n                'esc',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next(false);\n                }.bind(this),\n                ['HOTKEYS-CHEATSHEET'],\n                this.options.cheatSheetCloseEscDescription || 'Hide this help menu',\n            ));\n        }\n\n    }\n\n    add(hotkey: Hotkey | Hotkey[], specificEvent?: string): Hotkey | Hotkey[] {\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.add(key, specificEvent) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.hotkeys.push(hotkey as Hotkey);\n        this.mousetrap.bind((hotkey as Hotkey).combo, (event: KeyboardEvent, combo: string) => {\n            let shouldExecute = true;\n\n            // if the callback is executed directly `hotkey.get('w').callback()`\n            // there will be no event, so just execute the callback.\n            if (event) {\n                const target: HTMLElement = (event.target || event.srcElement) as HTMLElement; // srcElement is IE only\n                const nodeName: string = target.nodeName.toUpperCase();\n\n                // check if the input has a mousetrap class, and skip checking preventIn if so\n                if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n                    shouldExecute = true;\n                } else if (this.preventIn.indexOf(nodeName) > -1 &&\n                    (hotkey as Hotkey).allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1) {\n                    // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n                    shouldExecute = false;\n                }\n            }\n\n            if (shouldExecute) {\n                return (hotkey as Hotkey).callback.apply(this, [event, combo]);\n            }\n        }, specificEvent);\n        return hotkey;\n    }\n\n    remove(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        const temp: Hotkey[] = [];\n        if (!hotkey) {\n            for (const key of this.hotkeys) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        if (Array.isArray(hotkey)) {\n            for (const key of hotkey) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index = this.findHotkey(hotkey as Hotkey);\n        if (index > -1) {\n            this.hotkeys.splice(index, 1);\n            this.mousetrap.unbind((hotkey as Hotkey).combo);\n            return hotkey;\n        }\n        return null;\n    }\n\n    get(combo?: string | string[]): Hotkey | Hotkey[] {\n        if (!combo) {\n            return this.hotkeys;\n        }\n        if (Array.isArray(combo)) {\n            const temp: Hotkey[] = [];\n            for (const key of combo) {\n                temp.push(this.get(key) as Hotkey);\n            }\n            return temp;\n        }\n        for (const hotkey of this.hotkeys) {\n            if (hotkey.combo.indexOf(combo as string) > -1) {\n                return hotkey;\n            }\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    pause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.pause(this.hotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.pause(key) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.pausedHotkeys.push(hotkey as Hotkey);\n        return hotkey;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    unpause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.unpause(this.pausedHotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.unpause(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index: number = this.pausedHotkeys.indexOf(hotkey as Hotkey);\n        if (index > -1) {\n            this.add(hotkey);\n            return this.pausedHotkeys.splice(index, 1);\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    reset() {\n        this.mousetrap.reset();\n    }\n\n    private findHotkey(hotkey: Hotkey): number {\n        return this.hotkeys.indexOf(hotkey);\n    }\n}\n\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ExtendedKeyboardEvent, Hotkey } from './hotkey.model';\nimport { HotkeysService } from './hotkeys.service';\nimport 'mousetrap';\n\n@Directive({\n    selector: '[hotkeys]',\n    providers: [HotkeysService]\n})\nexport class HotkeysDirective implements OnInit, OnDestroy {\n    @Input() hotkeys: { [combo: string]: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent }[];\n\n    private mousetrap: MousetrapInstance;\n    private hotkeysList: Hotkey[] = [];\n    private oldHotkeys: Hotkey[] = [];\n\n    constructor(private hotkeysService: HotkeysService, private elementRef: ElementRef) {\n        this.mousetrap = new Mousetrap(this.elementRef.nativeElement); // Bind hotkeys to the current element (and any children)\n    }\n\n    ngOnInit() {\n        for (const hotkey of this.hotkeys) {\n            const combo = Object.keys(hotkey)[0];\n            const hotkeyObj: Hotkey = new Hotkey(combo, hotkey[combo]);\n            const oldHotkey: Hotkey = this.hotkeysService.get(combo) as Hotkey;\n            if (oldHotkey !== null) { // We let the user overwrite callbacks temporarily if you specify it in HTML\n                this.oldHotkeys.push(oldHotkey);\n                this.hotkeysService.remove(oldHotkey);\n            }\n            this.hotkeysList.push(hotkeyObj);\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n        }\n    }\n\n    ngOnDestroy() {\n        for (const hotkey of this.hotkeysList) {\n            this.mousetrap.unbind(hotkey.combo);\n        }\n        this.hotkeysService.add(this.oldHotkeys);\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Hotkey } from '../hotkey.model';\nimport { HotkeysService } from '../hotkeys.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'hotkeys-cheatsheet',\n    templateUrl: './hotkeys-cheatsheet.component.html',\n    styleUrls: ['./hotkeys-cheatsheet.component.css']\n})\nexport class HotkeysCheatsheetComponent implements OnInit, OnDestroy {\n    helpVisible = false;\n    @Input() title = 'Keyboard Shortcuts:';\n    subscription: Subscription;\n\n    hotkeys: Hotkey[];\n\n    constructor(private hotkeysService: HotkeysService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.hotkeysService.cheatSheetToggle.subscribe((isOpen) => {\n            if (isOpen !== false) {\n                this.hotkeys = this.hotkeysService.hotkeys.filter(hotkey => hotkey.description);\n            }\n\n            if (isOpen === false) {\n                this.helpVisible = false;\n            } else {\n                this.toggleCheatSheet();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    public toggleCheatSheet(): void {\n        this.helpVisible = !this.helpVisible;\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HotkeysDirective } from './hotkeys.directive';\nimport { HotkeysCheatsheetComponent } from './hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nimport { CommonModule } from '@angular/common';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport { HotkeysService } from './hotkeys.service';\n\n@NgModule({\n    declarations: [HotkeysDirective, HotkeysCheatsheetComponent],\n    imports: [CommonModule],\n    exports: [HotkeysDirective, HotkeysCheatsheetComponent]\n})\nexport class HotkeyModule {\n    // noinspection JSUnusedGlobalSymbols\n    static forRoot(options: IHotkeyOptions = {}): ModuleWithProviders<HotkeyModule> {\n        return {\n            ngModule : HotkeyModule,\n            providers : [\n                HotkeysService,\n                {provide : HotkeyOptions, useValue : options}\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of angular2-hotkeys\n */\n\nexport * from './lib/hotkeys.service';\nexport * from './lib/hotkeys.directive';\nexport * from './lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nexport * from './lib/hotkey.model';\nexport * from './lib/hotkey.options';\nexport * from './lib/hotkey.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}