{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","GridType","Fit","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","DisplayGrid","Always","OnDragAndResize","None","CompactType","CompactUp","CompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","CompactUpAndRight","CompactRightAndUp","DirTypes","LTR","RTL","GridsterCompact","gridster","destroy","checkCompact","$options","compactType","checkCompactUp","checkCompactLeft","checkCompactRight","checkCompactItem","item","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","y","itemChanged","checkCollision","x","Injectable","GridsterComponentInterface","GridsterConfigService","gridType","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","scrollSensitivity","scrollSpeed","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","scale","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","dirType","GridsterUtils","merge","obj1","obj2","properties","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","checkContentClass","target","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","getAttribute","split","indexOf","parentNode","compareItems","a","b","GridsterEmptyCell","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","getPixelsX","rect","left","scrollLeft","gridRenderer","getLeftMargin","getPixelsY","top","scrollTop","getTopMargin","oldItem","getBoundingClientRect","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","dPosition","transform","xPosition","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","checkCollisionTwoItems","item2","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","getNewArrayLength","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","overallSize","size","newLength","Component","selector","template","encapsulation","ViewEncapsulation","ElementRef","decorators","type","Inject","Renderer2","ChangeDetectorRef","NgZone","Input","GridsterPush","gridsterItem","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkItemChanges","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","canBeDragged","find","lastIndexOf","j","pop","removeFromPushedItem","gridsterItemCollide","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterItemComponentInterface","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterSwap","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","pushedBy","gridsterItemCollision","copyCollisionX","copyCollisionY","copyX","copyY","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","originalClientX","originalClientY","diffLeft","diffTop","calculateItemPositionFromMousePosition","calculateItemPositionWithScale","calculateItemPositionWithoutScale","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleE","handleW","handleS","handleNE","handleNW","handleSE","handleSW","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":";;;;;;;;;;;;;;oFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YC5BhC,MAAA,aCOA,IAAYQ,EAAQ,CAClBC,IAAG,MACHC,eAAc,iBACdC,iBAAgB,mBAChBC,MAAK,QACLC,cAAa,gBACbC,gBAAe,mBAGLC,EAAW,CACrBC,OAAM,SACNC,gBAAe,gBACfC,KAAI,QAGMC,EAAW,CACrBD,KAAI,OACJE,UAAS,YACTC,YAAW,cACXC,iBAAgB,iBAChBC,iBAAgB,iBAChBC,aAAY,eACZC,kBAAiB,kBACjBC,kBAAiB,mBAGPC,EAAQ,CAClBC,IAAG,MACHC,IAAG,OC5CL,IAAAC,EAAA,WAUE,SAAAA,EAAoBC,GAAAxB,KAAAwB,SAAAA,EA8ItB,OA3IED,EAAA3B,UAAA6B,QAAA,kBACSzB,KAAKwB,UAGdD,EAAA3B,UAAA8B,aAAA,WACM1B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYD,OACjDX,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYC,UACrDb,KAAK6B,iBACI7B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYE,YAC5Dd,KAAK8B,mBACI9B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYG,kBAC5Df,KAAK6B,iBACL7B,KAAK8B,oBACI9B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYI,kBAC5DhB,KAAK8B,mBACL9B,KAAK6B,kBACI7B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYK,aAC5DjB,KAAK+B,oBACI/B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYM,mBAC5DlB,KAAK6B,iBACL7B,KAAK+B,qBACI/B,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYO,oBAC5DnB,KAAK+B,oBACL/B,KAAK6B,oBAKXN,EAAA3B,UAAAoC,iBAAA,SAAiBC,GACXjC,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYD,OACjDX,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYC,UACrDb,KAAKkC,oBAAoBD,GAChBjC,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYE,YAC5Dd,KAAKmC,sBAAsBF,GAClBjC,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYG,kBAC5Df,KAAKkC,oBAAoBD,GACzBjC,KAAKmC,sBAAsBF,IAClBjC,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYI,kBAC5DhB,KAAKmC,sBAAsBF,GAC3BjC,KAAKkC,oBAAoBD,IAChBjC,KAAKwB,SAASG,SAASC,cAAgBhB,EAAYM,oBAC5DlB,KAAKkC,oBAAoBD,GACzBjC,KAAKoC,uBAAuBH,MAKlCV,EAAA3B,UAAAiC,eAAA,WAGE,QAF2BQ,EAAvBC,GAAgB,EACdC,EAAIvC,KAAKwB,SAASgB,KAAK9C,OACpBH,EAAI,EAAGA,EAAIgD,EAAGhD,KAEe,KADpC8C,EAASrC,KAAKwB,SAASgB,KAAKjD,IACjBkD,MAAMC,gBAGT1C,KAAKkC,oBAAoBG,EAAOI,SAEtCH,GAAgB,EAChBD,EAAOJ,KAAKU,EAAIN,EAAOI,MAAME,EAC7BN,EAAOO,eAGPN,GACFtC,KAAK0B,gBAITH,EAAA3B,UAAAsC,oBAAA,SAAoBD,GAElB,OADAA,EAAKU,GAAK,EACN3C,KAAKwB,SAASqB,eAAeZ,IAC/BA,EAAKU,GAAK,GACH,IAEP3C,KAAKkC,oBAAoBD,IAClB,IAIXV,EAAA3B,UAAAkC,iBAAA,WAGE,QAF2BO,EAAvBC,GAAgB,EACdC,EAAIvC,KAAKwB,SAASgB,KAAK9C,OACpBH,EAAI,EAAGA,EAAIgD,EAAGhD,KAEe,KADpC8C,EAASrC,KAAKwB,SAASgB,KAAKjD,IACjBkD,MAAMC,gBAGT1C,KAAKmC,sBAAsBE,EAAOI,SAExCH,GAAgB,EAChBD,EAAOJ,KAAKa,EAAIT,EAAOI,MAAMK,EAC7BT,EAAOO,eAGPN,GACFtC,KAAK0B,gBAITH,EAAA3B,UAAAmC,kBAAA,WAGE,QAF2BM,EAAvBC,GAAgB,EACdC,EAAIvC,KAAKwB,SAASgB,KAAK9C,OACpBH,EAAI,EAAGA,EAAIgD,EAAGhD,KAEe,KADpC8C,EAASrC,KAAKwB,SAASgB,KAAKjD,IACjBkD,MAAMC,gBAGT1C,KAAKoC,uBAAuBC,EAAOI,SAEzCH,GAAgB,EAChBD,EAAOJ,KAAKa,EAAIT,EAAOI,MAAMK,EAC7BT,EAAOO,eAGPN,GACFtC,KAAK0B,gBAITH,EAAA3B,UAAAuC,sBAAA,SAAsBF,GAEpB,OADAA,EAAKa,GAAK,EACN9C,KAAKwB,SAASqB,eAAeZ,IAC/BA,EAAKa,GAAK,GACH,IAEP9C,KAAKmC,sBAAsBF,IACpB,IAIXV,EAAA3B,UAAAwC,uBAAA,SAAuBH,GAErB,OADAA,EAAKa,GAAK,EACN9C,KAAKwB,SAASqB,eAAeZ,IAC/BA,EAAKa,GAAK,GACH,IAEP9C,KAAKoC,uBAAuBH,IACrB,wBA9IZc,EAAAA,sDALOC,KAsJRzB,EAxJA,GCEA,IAAa0B,EAAwC,CACnDC,SAAUjD,EAASC,IAMnBiD,cAAe,IACfC,eAAgB,IAChBC,yBAAyB,EACzBC,wBAAwB,EACxBC,aAAa,EACb3B,YAAahB,EAAYD,KACzB6C,iBAAkB,IAClBC,QAAS,EACTC,QAAS,IACTC,QAAS,EACTC,QAAS,IACTC,gBAAiB,EACjBC,gBAAiB,EACjBC,YAAa,GACbC,YAAa,GACbC,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,YAAa,KACbC,OAAQ,GACRC,aAAa,EACbC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,gBAAiB,KACjBC,yBAAyB,EACzBC,kBAAmB,GACnBC,YAAa,GACbC,kBAAcC,EACdC,qBAAiBD,EACjBE,6BAAyBF,EACzBG,wBAAoBH,EAEpBI,wBAAoBJ,EAEpBK,sBAAkBL,EAElBM,yBAAqBN,EAErBO,0BAAsBP,EAEtBQ,sBAAsB,EACtBC,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,wBAAwB,EACxBC,4BAAwBb,EACxBc,kCAA8Bd,EAC9Be,2BAAuBf,EACvBgB,2BAAuBhB,EACvBiB,qBAAsB,GACtBC,qBAAsB,GACtBC,MAAO,EAEPC,mBAAmB,EACnBC,UAAW,CACTC,WAAY,EACZC,SAAS,EACTC,mBAAoB,wBACpBC,eAAe,EACfC,gBAAiB,eACjBC,UAAM3B,EACN4B,WAAO5B,EAEP6B,eAAe,EACfC,2BAAuB9B,GAGzB+B,UAAW,CACTT,WAAY,EACZC,SAAS,EACTS,QAAS,CACPzH,GAAG,EACH0H,GAAG,EACHxH,GAAG,EACHyH,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,GAENX,UAAM3B,EACN4B,WAAO5B,GAGTuC,MAAM,EACNC,mBAAmB,EACnBC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,eAAgB,CAACC,OAAO,EAAMC,MAAM,EAAMC,OAAO,EAAMC,MAAM,GAC7DC,iBAAiB,EACjBC,YAAazH,EAAYE,gBACzBwH,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,uBAAuB,EACvBC,+BAA+B,EAC/BC,QAASpH,EAASC,KC5GpBoH,EAAA,WAIA,SAAAA,KAkFA,OA/ESA,EAAAC,MAAP,SAAaC,EAAWC,EAAWC,GACjC,IAAK,IAAMlJ,KAAKiJ,OACE,IAAZA,EAAKjJ,IAAiBkJ,EAAWhJ,eAAeF,KAC3B,iBAAZiJ,EAAKjJ,GACdgJ,EAAKhJ,GAAK8I,EAAcC,MAAMC,EAAKhJ,GAAIiJ,EAAKjJ,GAAIkJ,EAAWlJ,IAE3DgJ,EAAKhJ,GAAKiJ,EAAKjJ,IAKrB,OAAOgJ,GAGFF,EAAAK,SAAP,SAAgBC,EAAgBC,OAC1BC,EACJ,OAAA,eACQC,EAAUlJ,KAAMmJ,EAAO1J,UACvB2J,EAAK,WACTH,EAAU,KACVF,EAAKhJ,MAAMmJ,EAASC,IAEtBE,aAAaJ,GACbA,EAAUK,WAAWF,EAAOJ,MAIzBP,EAAAc,gBAAP,SAAuBvC,QACHjC,IAAdiC,EAAEwC,SAAyBxC,EAAEyC,UAC3BzC,EAAEyC,SAAWzC,EAAEyC,QAAQ/J,QACzBsH,EAAEwC,QAAUxC,EAAEyC,QAAQ,GAAGD,QACzBxC,EAAE0C,QAAU1C,EAAEyC,QAAQ,GAAGC,SAChB1C,EAAE2C,gBAAkB3C,EAAE2C,eAAejK,SAC9CsH,EAAEwC,QAAUxC,EAAE2C,eAAe,GAAGH,QAChCxC,EAAE0C,QAAU1C,EAAE2C,eAAe,GAAGD,WAK/BjB,EAAAmB,0BAAP,SAAiCpI,EAAsCwF,GACrE,GAAIxF,EAASG,SAASyE,UAAUI,eAC9B,IAAKiC,EAAcoB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAevI,EAASG,SAASyE,UAAUK,iBAC1F,OAAO,OAGT,GAAIgC,EAAcoB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAevI,EAASG,SAASyE,UAAUG,oBACzF,OAAO,EAGX,OAAO,GAGFkC,EAAAuB,wCAAP,SAA+CxI,EAAsCwF,GACnF,OAAOyB,EAAcoB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAevI,EAASG,SAASyE,UAAUG,qBACzFkC,EAAcoB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAevI,EAASG,SAASyE,UAAUK,kBAGvFgC,EAAAoB,kBAAP,SAAyBC,EAAaG,EAAcC,GAClD,SAAKJ,GAAUA,IAAWG,QAGtBH,EAAOK,aAAa,UAAYL,EAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQJ,IAAiB,IAG5FzB,EAAcoB,kBAAkBC,EAAOS,WAAYN,EAASC,KAIhEzB,EAAA+B,aAAP,SAAoBC,EAA6BC,GAC/C,OAAID,EAAE9H,EAAI+H,EAAE/H,GACF,EACC8H,EAAE9H,EAAI+H,EAAE/H,EACV,EACE8H,EAAE3H,EAAI4H,EAAE5H,GACT,EAED,uBA/EZC,EAAAA,aAkFD0F,EAtFA,GCAAkC,EAAA,WAsBE,SAAAA,EAAoBnJ,GAAAxB,KAAAwB,SAAAA,EA4NtB,OAzNEmJ,EAAA/K,UAAA6B,QAAA,kBACSzB,KAAK4K,mBACL5K,KAAKwB,SAASqJ,WACjB7K,KAAKwB,SAASsJ,cAChB9K,KAAKwB,SAASsJ,sBAET9K,KAAKwB,SACRxB,KAAK+K,gBACP/K,KAAK+K,gBACL/K,KAAK+K,cAAgB,OAIzBJ,EAAA/K,UAAAoL,cAAA,WAAA,IAAAC,EAAAjL,KACMA,KAAKwB,SAASG,SAAS4D,uBAAyBvF,KAAKkL,gBAAkBlL,KAAKwB,SAAS2J,QAAQvF,wBAC/F5F,KAAKkL,eAAiBlL,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,QAAStL,KAAKuL,iBAAiBC,KAAKxL,OAC1GA,KAAKyL,oBAAsBzL,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,WAAYtL,KAAKuL,iBAAiBC,KAAKxL,SACxGA,KAAKwB,SAASG,SAAS4D,sBAAwBvF,KAAKkL,gBAAkBlL,KAAKyL,sBACrFzL,KAAKkL,iBACLlL,KAAKyL,sBACLzL,KAAKkL,eAAiB,KACtBlL,KAAKyL,oBAAsB,MAEzBzL,KAAKwB,SAASG,SAAS6D,6BAA+BxF,KAAK0L,sBAC7D1L,KAAKwB,SAAS2J,QAAQtF,6BACtB7F,KAAK0L,qBAAuB1L,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,cAAetL,KAAK2L,uBAAuBH,KAAKxL,QAClHA,KAAKwB,SAASG,SAAS6D,4BAA8BxF,KAAK0L,uBACpE1L,KAAK0L,uBACL1L,KAAK0L,qBAAuB,MAE1B1L,KAAKwB,SAASG,SAAS8D,sBAAwBzF,KAAK4L,eAAiB5L,KAAKwB,SAAS2J,QAAQrF,uBAC7F9F,KAAK4L,cAAgB5L,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,OAAQtL,KAAK6L,kBAAkBL,KAAKxL,OACzGA,KAAKwB,SAASsK,KAAKC,mBAAiB,WAClCd,EAAKe,cAAgBf,EAAKzJ,SAAS4J,SAASC,OAAOJ,EAAKzJ,SAAS8J,GAAI,WAAYL,EAAKgB,kBAAkBT,KAAKP,OAE/GjL,KAAK+K,cAAgB/K,KAAKwB,SAAS4J,SAASC,OAAO,WAAY,WAAS,WACtEJ,EAAKzJ,SAASqJ,WAAa,KAC3BI,EAAKzJ,SAASsJ,oBAEN9K,KAAKwB,SAASG,SAAS8D,qBAAuBzF,KAAK4L,eAAiB5L,KAAKgM,eAAiBhM,KAAK+K,gBACzG/K,KAAK4L,gBACL5L,KAAKgM,gBACLhM,KAAK+K,gBACL/K,KAAKgM,cAAgB,KACrBhM,KAAK4L,cAAgB,KACrB5L,KAAK+K,cAAgB,MAEnB/K,KAAKwB,SAASG,SAAS+D,sBAAwB1F,KAAKkM,eAAiBlM,KAAKwB,SAAS2J,QAAQpF,uBAC7F/F,KAAKkM,cAAgBlM,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,YAAatL,KAAKmM,mBAAmBX,KAAKxL,OAC/GA,KAAKoM,mBAAqBpM,KAAKwB,SAAS4J,SAASC,OAAOrL,KAAKwB,SAAS8J,GAAI,aAActL,KAAKmM,mBAAmBX,KAAKxL,SAC3GA,KAAKwB,SAASG,SAAS+D,qBAAuB1F,KAAKkM,eAAiBlM,KAAKoM,qBACnFpM,KAAKkM,gBACLlM,KAAKoM,qBACLpM,KAAKkM,cAAgB,KACrBlM,KAAKoM,mBAAqB,OAI9BzB,EAAA/K,UAAA2L,iBAAA,SAAiBvE,GACf,IAAIhH,KAAKwB,SAASqJ,aAAcpC,EAAcuB,wCAAwChK,KAAKwB,SAAUwF,GAArG,KAGM/E,EAAOjC,KAAKqM,sBAAsBrF,GACnC/E,IAGDjC,KAAKwB,SAAS2J,QAAQvF,wBACxB5F,KAAKwB,SAAS2J,QAAQvF,uBAAuBoB,EAAG/E,GAElDjC,KAAKwB,SAAS8K,MAAMC,kBAGtB5B,EAAA/K,UAAA+L,uBAAA,SAAuB3E,GACrB,IAAIhH,KAAKwB,SAASqJ,aAAcpC,EAAcuB,wCAAwChK,KAAKwB,SAAUwF,GAArG,CAGAA,EAAEwF,iBACFxF,EAAEyF,sBACIxK,EAAOjC,KAAKqM,sBAAsBrF,GACnC/E,IAGDjC,KAAKwB,SAAS2J,QAAQtF,8BACxB7F,KAAKwB,SAAS2J,QAAQtF,6BAA6BmB,EAAG/E,GAExDjC,KAAKwB,SAAS8K,MAAMC,kBAGtB5B,EAAA/K,UAAAiM,kBAAA,SAAkB7E,OACV/E,EAAOjC,KAAKqM,sBAAsBrF,GACnC/E,IAGDjC,KAAKwB,SAAS2J,QAAQrF,uBACxB9F,KAAKwB,SAAS2J,QAAQrF,sBAAsBkB,EAAG/E,GAEjDjC,KAAKwB,SAAS8K,MAAMC,iBAGtB5B,EAAA/K,UAAAqM,kBAAA,SAAkBjF,GAChBA,EAAEwF,iBACFxF,EAAEyF,sBACIxK,EAAOjC,KAAKqM,sBAAsBrF,GACpC/E,GACF+E,EAAE0F,aAAaC,WAAa,OAC5B3M,KAAKwB,SAASqJ,WAAa5I,IAE3B+E,EAAE0F,aAAaC,WAAa,OAC5B3M,KAAKwB,SAASqJ,WAAa,MAE7B7K,KAAKwB,SAASsJ,gBAGhBH,EAAA/K,UAAAuM,mBAAA,SAAmBnF,GAAnB,IAAAiE,EAAAjL,KACE,IAAIyI,EAAcuB,wCAAwChK,KAAKwB,SAAUwF,GAAzE,CAGAA,EAAEwF,iBACFxF,EAAEyF,sBACIxK,EAAOjC,KAAKqM,sBAAsBrF,GAEnC/E,GADuB,IACf+E,EAAE4F,UAGf5M,KAAK4K,YAAc3I,EACnBjC,KAAKwB,SAASqJ,WAAa5I,EAC3BjC,KAAKwB,SAASsJ,eACd9K,KAAKwB,SAASsK,KAAKC,mBAAiB,WAClCd,EAAK4B,eAAiB5B,EAAKzJ,SAAS4J,SAASC,OAAO,SAAU,YAAaJ,EAAK6B,mBAAmBtB,KAAKP,IACxGA,EAAK8B,oBAAsB9B,EAAKzJ,SAAS4J,SAASC,OAAO,SAAU,YAAaJ,EAAK6B,mBAAmBtB,KAAKP,OAE/GjL,KAAKgN,YAAchN,KAAKwB,SAAS4J,SAASC,OAAO,SAAU,UAAWrL,KAAKiN,iBAAiBzB,KAAKxL,OACjGA,KAAKkN,iBAAmBlN,KAAKwB,SAAS4J,SAASC,OAAO,SAAU,WAAYrL,KAAKiN,iBAAiBzB,KAAKxL,UAGzG2K,EAAA/K,UAAAkN,mBAAA,SAAmB9F,GACjBA,EAAEwF,iBACFxF,EAAEyF,sBACIxK,EAAOjC,KAAKqM,sBAAsBrF,EAAGhH,KAAK4K,aAC3C3I,IAILjC,KAAKwB,SAASqJ,WAAa5I,EAC3BjC,KAAKwB,SAASsJ,iBAGhBH,EAAA/K,UAAAqN,iBAAA,SAAiBjG,GAAjB,IAAAiE,EAAAjL,KACEA,KAAK6M,iBACL7M,KAAK+M,sBACL/M,KAAKgN,cACLhN,KAAKkN,uBACCjL,EAAOjC,KAAKqM,sBAAsBrF,EAAGhH,KAAK4K,aAC5C3I,IACFjC,KAAKwB,SAASqJ,WAAa5I,GAEzBjC,KAAKwB,SAAS2J,QAAQpF,uBAAyB/F,KAAKwB,SAASqJ,YAC/D7K,KAAKwB,SAAS2J,QAAQpF,sBAAsBiB,EAAGhH,KAAKwB,SAASqJ,YAE/DvB,YAAU,WACR2B,EAAKL,YAAc,KACfK,EAAKzJ,WACPyJ,EAAKzJ,SAASqJ,WAAa,KAC3BI,EAAKzJ,SAASsJ,mBAGlB9K,KAAKwB,SAAS8K,MAAMC,gBAGtB5B,EAAA/K,UAAAuN,WAAA,SAAWnG,EAAQoG,OACXlH,EAAQlG,KAAKwB,SAAS2J,QAAQjF,MACpC,OAAIA,GACMc,EAAEwC,QAAU4D,EAAKC,MAAQnH,EAAQlG,KAAKwB,SAAS8J,GAAGgC,WAAatN,KAAKwB,SAAS+L,aAAaC,gBAE7FxG,EAAEwC,QAAUxJ,KAAKwB,SAAS8J,GAAGgC,WAAaF,EAAKC,KAAOrN,KAAKwB,SAAS+L,aAAaC,iBAG1F7C,EAAA/K,UAAA6N,WAAA,SAAWzG,EAAQoG,OACXlH,EAAQlG,KAAKwB,SAAS2J,QAAQjF,MACpC,OAAIA,GACMc,EAAE0C,QAAU0D,EAAKM,KAAOxH,EAAQlG,KAAKwB,SAAS8J,GAAGqC,UAAY3N,KAAKwB,SAAS+L,aAAaK,eAE3F5G,EAAE0C,QAAU1J,KAAKwB,SAAS8J,GAAGqC,UAAYP,EAAKM,IAAM1N,KAAKwB,SAAS+L,aAAaK,gBAGxFjD,EAAA/K,UAAAyM,sBAAA,SAAsBrF,EAAQ6G,GAC5B7G,EAAEwF,iBACFxF,EAAEyF,kBACFhE,EAAcc,gBAAgBvC,OACxBoG,EAAOpN,KAAKwB,SAAS8J,GAAGwC,wBACxBhL,EAAI9C,KAAKmN,WAAWnG,EAAGoG,GACvBzK,EAAI3C,KAAKyN,WAAWzG,EAAGoG,GACvBnL,EAAqB,CACzBa,EAAG9C,KAAKwB,SAASuM,kBAAkBjL,EAAGkL,KAAKC,OAAO,GAClDtL,EAAG3C,KAAKwB,SAAS0M,kBAAkBvL,EAAGqL,KAAKC,OAAO,GAClDE,KAAMnO,KAAKwB,SAASG,SAASkC,gBAC7BuK,KAAMpO,KAAKwB,SAASG,SAASmC,iBAgB/B,GAdI+J,IACF5L,EAAKkM,KAAOH,KAAKK,IAAIL,KAAKM,IAAIT,EAAQ/K,EAAIb,EAAKa,GAAK,EAAG9C,KAAKwB,SAASG,SAASqE,sBAC9E/D,EAAKmM,KAAOJ,KAAKK,IAAIL,KAAKM,IAAIT,EAAQlL,EAAIV,EAAKU,GAAK,EAAG3C,KAAKwB,SAASG,SAASsE,sBAC1E4H,EAAQ/K,EAAIb,EAAKa,EACnBb,EAAKa,EAAI+K,EAAQ/K,EACR+K,EAAQ/K,EAAIb,EAAKa,EAAI9C,KAAKwB,SAASG,SAASqE,qBAAuB,IAC5E/D,EAAKa,EAAI9C,KAAKwB,SAASqJ,WAAa7K,KAAKwB,SAASqJ,WAAW/H,EAAI,GAE/D+K,EAAQlL,EAAIV,EAAKU,EACnBV,EAAKU,EAAIkL,EAAQlL,EACRkL,EAAQlL,EAAIV,EAAKU,EAAI3C,KAAKwB,SAASG,SAASsE,qBAAuB,IAC5EhE,EAAKU,EAAI3C,KAAKwB,SAASqJ,WAAa7K,KAAKwB,SAASqJ,WAAWlI,EAAI,IAGhE3C,KAAKwB,SAASG,SAASgE,yBAA0B3F,KAAKwB,SAASqB,eAAeZ,GAGnF,OAAOA,uBA1OVc,EAAAA,sDAFOC,KA8OR2H,EAlPA,GCMA,IAAA4D,EAAA,WAGE,SAAAA,EAAoB/M,GAAAxB,KAAAwB,SAAAA,EAqMtB,OAlME+M,EAAA3O,UAAA6B,QAAA,kBACSzB,KAAKwB,UAGd+M,EAAA3O,UAAA4O,WAAA,SAAWlD,EAASrJ,EAAoBmJ,GACtC,GAAIpL,KAAKwB,SAASiN,OAChBzO,KAAK0O,kBAAkBtD,EAAUE,GAC7BtL,KAAKwB,SAASG,SAAS0B,wBACzB+H,EAASuD,SAASrD,EAAI,SAAWrJ,EAAKmM,KAAOpO,KAAKwB,SAASG,SAASyB,eAAkB,MAEtFgI,EAASuD,SAASrD,EAAI,SAAWrJ,EAAKmM,KAAOpO,KAAKwB,SAASoN,SAAW3M,EAAKkM,KAAQ,MAEjFnO,KAAKwB,SAASG,SAAS2B,uBACzB8H,EAASuD,SAASrD,EAAI,QAAStL,KAAKwB,SAASG,SAASwB,cAAgB,MAEtEiI,EAASuD,SAASrD,EAAI,QAAS,IAGjCF,EAASuD,SAASrD,EAAI,gBAAiBtL,KAAKwB,SAASG,SAAS0C,OAAS,MACvE+G,EAASuD,SAASrD,EAAI,eAAgB,QACjC,KACCxI,EAAIkL,KAAKa,MAAM7O,KAAKwB,SAASsN,YAAc7M,EAAKa,GAChDH,EAAIqL,KAAKa,MAAM7O,KAAKwB,SAASuN,aAAe9M,EAAKU,GACjDqM,EAAQhP,KAAKwB,SAASsN,YAAc7M,EAAKkM,KAAOnO,KAAKwB,SAASG,SAAS0C,OACvE4K,EAAUjP,KAAKwB,SAASuN,aAAe9M,EAAKmM,KAAOpO,KAAKwB,SAASG,SAAS0C,OAEhFrE,KAAKkP,gBAAgB9D,EAAUE,EAAIxI,EAAGH,GACtCyI,EAASuD,SAASrD,EAAI,QAAS0D,EAAQ,MACvC5D,EAASuD,SAASrD,EAAI,SAAU2D,EAAS,UACrCE,EAA8B,KAC9BC,EAA6B,KAC7BpP,KAAKwB,SAASG,SAAS2C,cACrBtE,KAAKwB,SAAS4M,OAASnM,EAAKmM,KAAOnM,EAAKU,IAExCwM,EAD+C,OAA7CnP,KAAKwB,SAASG,SAAS8C,kBACVzE,KAAKwB,SAASG,SAAS8C,kBAAoB,KAE3CzE,KAAKwB,SAASG,SAAS0C,OAAS,MAG/CrE,KAAKwB,SAAS6N,UAAYpN,EAAKkM,KAAOlM,EAAKa,IAE3CsM,EAD+C,OAA7CpP,KAAKwB,SAASG,SAAS8C,kBACXzE,KAAKwB,SAASG,SAAS6C,iBAAmB,KAE1CxE,KAAKwB,SAASG,SAAS0C,OAAS,OAKpD+G,EAASuD,SAASrD,EAAI,gBAAiB6D,GACvC/D,EAASuD,SAASrD,EAAI,eAAgB8D,KAI1Cb,EAAA3O,UAAA0P,eAAA,eACMC,EAAW,GACXC,EAAe,GACfC,EAAe,GACfC,EAAe,GACf1P,KAAKwB,SAASG,SAASuB,WAAajD,EAASC,KAC/CqP,EAAWtP,EAASC,IACpBsP,EAAevP,EAASE,eACxBsP,EAAexP,EAASG,iBACxBsP,EAAezP,EAASI,OACfL,KAAKwB,SAASG,SAASuB,WAAajD,EAASE,gBACtDH,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASsN,YAC3CS,EAAWtP,EAASE,eACpBqP,EAAevP,EAASC,IACxBuP,EAAexP,EAASG,iBACxBsP,EAAezP,EAASI,OACfL,KAAKwB,SAASG,SAASuB,WAAajD,EAASG,kBACtDJ,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASuN,aAC1CQ,EAAWtP,EAASG,iBACpBoP,EAAevP,EAASC,IACxBuP,EAAexP,EAASE,eACxBuP,EAAezP,EAASI,OACfL,KAAKwB,SAASG,SAASuB,WAAajD,EAASI,OACtDL,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASG,SAASwB,eAChDnD,KAAKwB,SAASG,SAASwE,kBAAoB,EAAInG,KAAKwB,SAASG,SAAS0C,QACzErE,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASG,SAASyB,gBACjDpD,KAAKwB,SAASG,SAASwE,kBAAoB,EAAInG,KAAKwB,SAASG,SAAS0C,QACzEkL,EAAWtP,EAASI,MACpBmP,EAAevP,EAASC,IACxBuP,EAAexP,EAASE,eACxBuP,EAAezP,EAASG,kBACfJ,KAAKwB,SAASG,SAASuB,WAAajD,EAASK,eACtDN,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASG,SAASyB,gBACjDpD,KAAKwB,SAASG,SAASwE,kBAAoB,EAAInG,KAAKwB,SAASG,SAAS0C,QACzEkL,EAAWtP,EAASE,eACpBqP,EAAevP,EAASC,IACxBuP,EAAexP,EAASG,iBACxBsP,EAAezP,EAASI,OACfL,KAAKwB,SAASG,SAASuB,WAAajD,EAASM,kBACtDP,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASG,SAASwB,eAChDnD,KAAKwB,SAASG,SAASwE,kBAAoB,EAAInG,KAAKwB,SAASG,SAAS0C,QACzEkL,EAAWtP,EAASG,iBACpBoP,EAAevP,EAASC,IACxBuP,EAAexP,EAASE,eACxBuP,EAAezP,EAASI,OAGtBL,KAAKwB,SAASiN,OAChBzO,KAAKwB,SAAS4J,SAASuE,YAAY3P,KAAKwB,SAAS8J,GAAIiE,GAErDvP,KAAKwB,SAAS4J,SAASmE,SAASvP,KAAKwB,SAAS8J,GAAIiE,GAEpDvP,KAAKwB,SAAS4J,SAASuE,YAAY3P,KAAKwB,SAAS8J,GAAIkE,GACrDxP,KAAKwB,SAAS4J,SAASuE,YAAY3P,KAAKwB,SAAS8J,GAAImE,GACrDzP,KAAKwB,SAAS4J,SAASuE,YAAY3P,KAAKwB,SAAS8J,GAAIoE,IAGvDnB,EAAA3O,UAAAgQ,mBAAA,SAAmBrQ,GACjB,OAAAL,EAAA,GACKc,KAAK6P,gBAAgB7P,KAAKwB,SAASsN,YAAcvP,GAAE,CACtDyP,MAAOhP,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASG,SAAS0C,OAAS,KACnE4K,OAAQjP,KAAKwB,SAASsO,SAASpQ,OAASM,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASG,SAAS0C,OAAS,QAIzGkK,EAAA3O,UAAAmQ,gBAAA,SAAgBxQ,GACd,OAAAL,EAAA,GACKc,KAAKgQ,eAAehQ,KAAKwB,SAASuN,aAAexP,GAAE,CACtDyP,MAAOhP,KAAKwB,SAASyO,YAAYvQ,OAASM,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASG,SAAS0C,OAAS,KACtG4K,OAAQjP,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASG,SAAS0C,OAAS,QAIzEkK,EAAA3O,UAAAiQ,gBAAA,SAAgBK,OACRC,EAAYnQ,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAAO4O,EAAIA,EACzE,OAAIlQ,KAAKwB,SAASG,SAASgD,wBAClB,CACLyL,UAAW,cAAgBD,EAAY,OAGlC,CACL9C,KAAOrN,KAAKwN,gBAAkB2C,EAAa,OAKjD5B,EAAA3O,UAAAoQ,eAAA,SAAeE,GACb,OAAIlQ,KAAKwB,SAASG,SAASgD,wBAClB,CACLyL,UAAW,cAAgBF,EAAI,OAG1B,CACLxC,IAAK1N,KAAK4N,eAAiBsC,EAAI,OAKrC3B,EAAA3O,UAAA8O,kBAAA,SAAkBtD,EAAqBE,GACjCtL,KAAKwB,SAASG,SAASgD,wBACzByG,EAASuD,SAASrD,EAAI,YAAa,KAEnCF,EAASuD,SAASrD,EAAI,MAAO,IAC7BF,EAASuD,SAASrD,EAAI,OAAQ,MAIlCiD,EAAA3O,UAAAsP,gBAAA,SAAgB9D,EAAqBE,EAASxI,EAAWH,OACjD0N,EAAYrQ,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAAOwB,EAAIA,EACzE,GAAI9C,KAAKwB,SAASG,SAASgD,wBAAyB,KAC5CyL,EAAY,eAAiBC,EAAY,OAAS1N,EAAI,SAC5DyI,EAASuD,SAASrD,EAAI,YAAa8E,QAEnChF,EAASuD,SAASrD,EAAI,OAAQtL,KAAKwN,gBAAkB6C,EAAY,MACjEjF,EAASuD,SAASrD,EAAI,MAAOtL,KAAK4N,eAAiBjL,EAAI,OAI3D4L,EAAA3O,UAAA4N,cAAA,WACE,OAAIxN,KAAKwB,SAASG,SAAS2C,YACsB,OAA3CtE,KAAKwB,SAASG,SAAS+C,gBAClB1E,KAAKwB,SAASG,SAAS+C,gBAEvB1E,KAAKwB,SAASG,SAAS0C,OAGzB,GAIXkK,EAAA3O,UAAAgO,aAAA,WACE,OAAI5N,KAAKwB,SAASG,SAAS2C,YACqB,OAA1CtE,KAAKwB,SAASG,SAAS4C,eAClBvE,KAAKwB,SAASG,SAAS4C,eAEvBvE,KAAKwB,SAASG,SAAS0C,OAGzB,uBArMZtB,EAAAA,sDAJOC,KA4MRuL,EAxMA,GCNA,IAAA+B,EAAA,WAuDE,SAAAA,EAAgChF,EAA0CF,EAC5BkB,EACXR,GAFuC9L,KAAAoL,SAAAA,EAC5BpL,KAAAsM,MAAAA,EACXtM,KAAA8L,KAAAA,EAdnC9L,KAAAqP,QAAU,EACVrP,KAAAoO,KAAO,EAGPpO,KAAAiQ,YAAc,GACdjQ,KAAA8P,SAAW,GAUT9P,KAAKsL,GAAKA,EAAGiF,cACbvQ,KAAK2B,SAAW6O,KAAKC,MAAMD,KAAKE,UAAUzN,IAC1CjD,KAAK2Q,wBAA0BlI,EAAcK,SAAS9I,KAAK4Q,gBAAgBpF,KAAKxL,MAAO,GACvFA,KAAKyO,QAAS,EACdzO,KAAK4O,SAAW,EAChB5O,KAAK6Q,UAAY,EACjB7Q,KAAKwC,KAAO,GACZxC,KAAK8O,YAAc,EACnB9O,KAAK+O,aAAe,EACpB/O,KAAK8Q,gBAAiB,EACtB9Q,KAAK+Q,UAAY,IAAIpG,EAAkB3K,MACvCA,KAAKgR,QAAU,IAAIzP,EAAgBvB,MACnCA,KAAKuN,aAAe,IAAIgB,EAAiBvO,MA8e7C,OA3eSsQ,EAAAW,uBAAP,SAA8BhP,EAAoBiP,GAChD,OAAOjP,EAAKa,EAAIoO,EAAMpO,EAAIoO,EAAM/C,MAC3BlM,EAAKa,EAAIb,EAAKkM,KAAO+C,EAAMpO,GAC3Bb,EAAKU,EAAIuO,EAAMvO,EAAIuO,EAAM9C,MACzBnM,EAAKU,EAAIV,EAAKmM,KAAO8C,EAAMvO,GAGlC2N,EAAA1Q,UAAAuR,SAAA,WACMnR,KAAKmL,QAAQrG,cACf9E,KAAKmL,QAAQrG,aAAa9E,OAI9BsQ,EAAA1Q,UAAAwR,YAAA,SAAYC,GACNA,EAAQlG,UACVnL,KAAKsR,aACLtR,KAAKmL,QAAQoG,IAAM,CACjBC,eAAgBxR,KAAKwR,eAAehG,KAAKxL,MACzCyR,OAAQzR,KAAK0R,SAASlG,KAAKxL,MAC3B2R,wBAAyB3R,KAAK2R,wBAAwBnG,KAAKxL,MAC3D4R,yBAA0B5R,KAAK4R,yBAAyBpG,KAAKxL,MAC7D6R,wBAAyB7R,KAAK6R,wBAAwBrG,KAAKxL,OAE7DA,KAAKqP,QAAUrP,KAAK2B,SAAS8B,QAC7BzD,KAAKoO,KAAOpO,KAAK2B,SAASgC,QAC1B3D,KAAKuD,cACLvD,KAAK4Q,oBAITN,EAAA1Q,UAAA6R,OAAA,eACMxC,EACAD,EAC2B,QAA3BhP,KAAK2B,SAASuB,UAAuBlD,KAAKyO,QAI5CO,EAAQhP,KAAKsL,GAAGwG,YAChB7C,EAASjP,KAAKsL,GAAGyG,eAJjB/C,EAAQhP,KAAKsL,GAAG0G,YAChB/C,EAASjP,KAAKsL,GAAG2G,cAKdjD,IAAUhP,KAAK4O,UAAYK,IAAWjP,KAAK6Q,YAAc7Q,KAAKkS,mBACjElS,KAAK0R,YAITpB,EAAA1Q,UAAA0R,WAAA,WACEtR,KAAK2B,SAAW8G,EAAcC,MAAM1I,KAAK2B,SAAU3B,KAAKmL,QAASnL,KAAK2B,UACjE3B,KAAK2B,SAASuG,qBAAwBlI,KAAKmS,aAErCnS,KAAK2B,SAASuG,qBAAuBlI,KAAKmS,eACnDnS,KAAKmS,eACLnS,KAAKmS,aAAe,MAHpBnS,KAAKmS,aAAenS,KAAKoL,SAASC,OAAO,SAAU,SAAUrL,KAAK0R,SAASlG,KAAKxL,OAKlFA,KAAK+Q,UAAU/F,iBAGjBsF,EAAA1Q,UAAA4R,eAAA,WACExR,KAAKsR,aAGL,QAFIc,EAAuBpS,KAAKwC,KAAK9C,OAAS,EAEvC0S,GAAgB,EAAGA,IACfpS,KAAKwC,KAAK4P,GACZpH,gBAEThL,KAAK4Q,mBAGPN,EAAA1Q,UAAAyS,YAAA,WACMrS,KAAKmS,cACPnS,KAAKmS,eAEHnS,KAAKmL,SAAWnL,KAAKmL,QAAQnG,iBAC/BhF,KAAKmL,QAAQnG,gBAAgBhF,MAE3BA,KAAKmL,SAAWnL,KAAKmL,QAAQoG,MAC/BvR,KAAKmL,QAAQoG,IAAIE,YAAS1M,EAC1B/E,KAAKmL,QAAQoG,IAAIC,oBAAiBzM,EAClC/E,KAAKmL,QAAQoG,IAAII,6BAA0B5M,EAC3C/E,KAAKmL,QAAQoG,SAAMxM,GAErB/E,KAAK+Q,UAAUtP,iBACRzB,KAAK+Q,UACZ/Q,KAAKgR,QAAQvP,iBACNzB,KAAKgR,SAGdV,EAAA1Q,UAAA8R,SAAA,WACE1R,KAAKuD,cACLvD,KAAK4Q,mBAGPN,EAAA1Q,UAAAsS,gBAAA,eACQJ,EAAc9R,KAAKsL,GAAGwG,YACtBE,EAAchS,KAAKsL,GAAG0G,YACtBM,EAActS,KAAKsL,GAAGgH,YACtBP,EAAe/R,KAAKsL,GAAGyG,aACvBE,EAAejS,KAAKsL,GAAG2G,aACvBM,EAAevS,KAAKsL,GAAGiH,aAK7B,QAJ8BT,EAAcE,GAAeO,EAAeN,GACrEM,EAAeN,EAAeD,EAAcF,MACjBC,EAAeE,GAC1CK,EAAcN,GAAeM,EAAcN,EAAcC,EAAeF,IAO/EzB,EAAA1Q,UAAA2D,YAAA,eAEMyL,EACAC,EAFE3D,EAAKtL,KAAKsL,GAGZtL,KAAK2B,SAAS4B,aAA0C,QAA3BvD,KAAK2B,SAASuB,WAAuBlD,KAAKyO,QACzEO,EAAQ1D,EAAG0G,YACX/C,EAAS3D,EAAG2G,eAEZjD,EAAQ1D,EAAGwG,YACX7C,EAAS3D,EAAGyG,cAEd/R,KAAK4O,SAAWI,EAChBhP,KAAK6Q,UAAY5B,GAGnBqB,EAAA1Q,UAAA4S,kBAAA,WACExS,KAAKuD,eACAvD,KAAKyO,QAAUzO,KAAK2B,SAAS6B,iBAAmBxD,KAAK4O,UACxD5O,KAAKyO,QAAUzO,KAAKyO,OACpBzO,KAAKoL,SAASmE,SAASvP,KAAKsL,GAAI,WACvBtL,KAAKyO,QAAUzO,KAAK2B,SAAS6B,iBAAmBxD,KAAK4O,WAC9D5O,KAAKyO,QAAUzO,KAAKyO,OACpBzO,KAAKoL,SAASuE,YAAY3P,KAAKsL,GAAI,WAOrC,QADIjJ,EAJA+L,EAAOpO,KAAK2B,SAASgC,QACrB0L,EAAUrP,KAAK2B,SAAS8B,QAExB2O,EAAepS,KAAKwC,KAAK9C,OAAS,EAE/B0S,GAAgB,EAAGA,KACxB/P,EAASrC,KAAKwC,KAAK4P,IACPK,YACVrE,EAAOJ,KAAK0E,IAAItE,EAAM/L,EAAOI,MAAME,EAAIN,EAAOI,MAAM2L,MACpDiB,EAAUrB,KAAK0E,IAAIrD,EAAShN,EAAOI,MAAMK,EAAIT,EAAOI,MAAM0L,OAI1DnO,KAAKqP,UAAYA,GAAWrP,KAAKoO,OAASA,IAC5CpO,KAAKqP,QAAUA,EACfrP,KAAKoO,KAAOA,EACRpO,KAAKmL,QAAQlG,yBACfjF,KAAKmL,QAAQlG,wBAAwBjF,QAK3CsQ,EAAA1Q,UAAAgR,gBAAA,WAME,GALI5Q,KAAKgR,SACPhR,KAAKgR,QAAQtP,eAGf1B,KAAKwS,oBACDxS,KAAK2B,SAAS2C,YAAa,KACzBqO,GAAe3S,KAAK2B,SAAS0C,OACK,OAAlCrE,KAAK2B,SAAS+C,iBAChBiO,GAAe3S,KAAK2B,SAAS+C,gBAC7B1E,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,eAAgBtL,KAAK2B,SAAS+C,gBAAkB,QAEhFiO,GAAe3S,KAAK2B,SAAS0C,OAC7BrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,eAAgBtL,KAAK2B,SAAS0C,OAAS,OAElC,OAAnCrE,KAAK2B,SAAS6C,kBAChBmO,GAAe3S,KAAK2B,SAAS6C,iBAC7BxE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,gBAAiBtL,KAAK2B,SAAS6C,iBAAmB,QAElFmO,GAAe3S,KAAK2B,SAAS0C,OAC7BrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,gBAAiBtL,KAAK2B,SAAS0C,OAAS,OAE1ErE,KAAK8O,aAAe9O,KAAK4O,SAAW+D,GAAe3S,KAAKqP,YACpDuD,GAAgB5S,KAAK2B,SAAS0C,OACG,OAAjCrE,KAAK2B,SAAS4C,gBAChBqO,GAAgB5S,KAAK2B,SAAS4C,eAC9BvE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,cAAetL,KAAK2B,SAAS4C,eAAiB,QAE9EqO,GAAgB5S,KAAK2B,SAAS0C,OAC9BrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,cAAetL,KAAK2B,SAAS0C,OAAS,OAEhC,OAApCrE,KAAK2B,SAAS8C,mBAChBmO,GAAgB5S,KAAK2B,SAAS8C,kBAC9BzE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,iBAAkBtL,KAAK2B,SAAS8C,kBAAoB,QAEpFmO,GAAgB5S,KAAK2B,SAAS0C,OAC9BrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,iBAAkBtL,KAAK2B,SAAS0C,OAAS,OAE3ErE,KAAK+O,cAAgB/O,KAAK6Q,UAAY+B,GAAgB5S,KAAKoO,UAE3DpO,KAAK8O,aAAe9O,KAAK4O,SAAW5O,KAAK2B,SAAS0C,QAAUrE,KAAKqP,QACjErP,KAAK+O,cAAgB/O,KAAK6Q,UAAY7Q,KAAK2B,SAAS0C,QAAUrE,KAAKoO,KACnEpO,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,eAAgB,OAChDtL,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,gBAAiB,OACjDtL,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,cAAe,OAC/CtL,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,iBAAkB,OAEpDtL,KAAKuN,aAAa+B,iBAElBtP,KAAK6S,aAED7S,KAAK2B,SAAS4B,aAChBvD,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,QAAUtL,KAAKqP,QAAUrP,KAAK8O,YAAc9O,KAAK2B,SAAS0C,OAAU,MACpGrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,SAAWtL,KAAKoO,KAAOpO,KAAK+O,aAAe/O,KAAK2B,SAAS0C,OAAU,QAEnGrE,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,QAAS,IACzCtL,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,SAAU,KAK5C,QADIjJ,EADA+P,EAAuBpS,KAAKwC,KAAK9C,OAAS,EAEvC0S,GAAgB,EAAGA,KACxB/P,EAASrC,KAAKwC,KAAK4P,IACZU,UACPzQ,EAAO0Q,KAAKC,SACZ3Q,EAAOoP,OAAOuB,SAGhB1J,WAAWtJ,KAAKyR,OAAOjG,KAAKxL,MAAO,MAGrCsQ,EAAA1Q,UAAAiT,WAAA,WACoC,WAA9B7S,KAAK2B,SAASsG,aAA6BjI,KAAKyO,OAEX,kBAA9BzO,KAAK2B,SAASsG,aAAmCjI,KAAK8Q,eAC/D9Q,KAAKoL,SAASmE,SAASvP,KAAKsL,GAAI,gBACO,SAA9BtL,KAAK2B,SAASsG,aAA2BjI,KAAK8Q,iBAAkB9Q,KAAKyO,QAC9EzO,KAAKoL,SAASuE,YAAY3P,KAAKsL,GAAI,gBAJnCtL,KAAKoL,SAASmE,SAASvP,KAAKsL,GAAI,gBAMlCtL,KAAKwS,oBACLxS,KAAKiQ,YAAYvQ,OAAS4Q,EAAkB2C,kBAAkBjT,KAAKqP,QAASrP,KAAK4O,SAAU5O,KAAK8O,aAChG9O,KAAK8P,SAASpQ,OAAS4Q,EAAkB2C,kBAAkBjT,KAAKoO,KAAMpO,KAAK6Q,UAAW7Q,KAAK+O,cAC3F/O,KAAKsM,MAAMC,gBAGb+D,EAAA1Q,UAAAsT,QAAA,SAAQC,QAC2BpO,IAA7BoO,EAAc1Q,MAAM0L,OACtBgF,EAAc1Q,MAAM0L,KAAOnO,KAAK2B,SAASkC,gBACzCsP,EAAclR,KAAKkM,KAAOgF,EAAc1Q,MAAM0L,KAC9CgF,EAAcvQ,oBAEiBmC,IAA7BoO,EAAc1Q,MAAM2L,OACtB+E,EAAc1Q,MAAM2L,KAAOpO,KAAK2B,SAASmC,gBACzCqP,EAAclR,KAAKmM,KAAO+E,EAAc1Q,MAAM2L,KAC9C+E,EAAcvQ,gBAEe,IAA3BuQ,EAAc1Q,MAAMK,IAAuC,IAA3BqQ,EAAc1Q,MAAME,EACtD3C,KAAKoT,iBAAiBD,GACbnT,KAAK6C,eAAesQ,EAAc1Q,SACtCzC,KAAK2B,SAASwG,kBACjBgL,EAAcV,WAAY,EAC1BY,QAAQC,KAAK,6EACX9C,KAAKE,UAAUyC,EAAclR,KAAM,CAAC,OAAQ,OAAQ,IAAK,QAExDjC,KAAK2B,SAAS4G,8BAGjB4K,EAAcV,WAAY,EAF1BzS,KAAKoT,iBAAiBD,IAK1BnT,KAAKwC,KAAK+Q,KAAKJ,GACfnT,KAAK2Q,2BAGPL,EAAA1Q,UAAA4T,WAAA,SAAWL,GACTnT,KAAKwC,KAAKiR,OAAOzT,KAAKwC,KAAK8H,QAAQ6I,GAAgB,GACnDnT,KAAK2Q,0BACD3Q,KAAKmL,QAAQ9F,qBACfrF,KAAKmL,QAAQ9F,oBAAoB8N,EAAclR,KAAMkR,IAIzD7C,EAAA1Q,UAAAiD,eAAA,SAAeZ,OACTyR,GAAsD,EAO1D,GANI1T,KAAKmL,QAAQ7F,uBACfoO,GAAa1T,KAAKmL,QAAQ7F,qBAAqBrD,KAE5CyR,GAAa1T,KAAK2T,mBAAmB1R,KACxCyR,GAAY,IAETA,EAAW,KACRE,EAAI5T,KAAK6T,iBAAiB5R,GAC5B2R,IACFF,EAAYE,GAGhB,OAAOF,GAGTpD,EAAA1Q,UAAA+T,mBAAA,SAAmB1R,OACX6R,EAAqB7R,EAAKU,GAAK,GAAKV,EAAKa,GAAK,EAC9CiR,EAAc9R,EAAKkM,KAAOlM,EAAKa,GAAK9C,KAAK2B,SAAS+B,QAClDsQ,EAAc/R,EAAKmM,KAAOnM,EAAKU,GAAK3C,KAAK2B,SAASiC,QAClDG,OAAmCgB,IAArB9C,EAAK8B,YAA4B/D,KAAK2B,SAASoC,YAAc9B,EAAK8B,YAChFE,OAAmCc,IAArB9C,EAAKgC,YAA4BjE,KAAK2B,SAASsC,YAAchC,EAAKgC,YAChFD,OAAmCe,IAArB9C,EAAK+B,YAA4BhE,KAAK2B,SAASqC,YAAc/B,EAAK+B,YAChFE,OAAmCa,IAArB9C,EAAKiC,YAA4BlE,KAAK2B,SAASuC,YAAcjC,EAAKiC,YAChF+P,EAAehS,EAAKkM,MAAQpK,GAAe9B,EAAKkM,MAAQlK,EACxDiQ,EAAejS,EAAKmM,MAAQpK,GAAe/B,EAAKmM,MAAQlK,EACxDiQ,OAAoCpP,IAArB9C,EAAKkC,YAA4BnE,KAAK2B,SAASwC,YAAclC,EAAKkC,YACjFiQ,OAAoCrP,IAArB9C,EAAKmC,YAA4BpE,KAAK2B,SAASyC,YAAcnC,EAAKmC,YACjFiQ,EAAOpS,EAAKkM,KAAOlM,EAAKmM,KAG9B,QAAS0F,GAAsBC,GAAeC,GAAeC,GAAgBC,GAF3DC,GAAgBE,GAChBD,GAAgBC,IAIpC/D,EAAA1Q,UAAAiU,iBAAA,SAAiB5R,GAGf,QADII,EADA+P,EAAuBpS,KAAKwC,KAAK9C,OAAS,EAEvC0S,GAAgB,EAAGA,IAExB,IADA/P,EAASrC,KAAKwC,KAAK4P,IACR3P,QAAUR,GAAQqO,EAAkBW,uBAAuB5O,EAAOI,MAAOR,GAClF,OAAOI,EAGX,OAAO,GAGTiO,EAAA1Q,UAAA0U,kBAAA,SAAkBrS,GAIhB,QADII,EAFEoI,EAA2C,GAC7C2H,EAAuBpS,KAAKwC,KAAK9C,OAAS,EAEvC0S,GAAgB,EAAGA,KACxB/P,EAASrC,KAAKwC,KAAK4P,IACR3P,QAAUR,GAAQqO,EAAkBW,uBAAuB5O,EAAOI,MAAOR,IAClFwI,EAAE8I,KAAKlR,GAGX,OAAOoI,GAGT6F,EAAA1Q,UAAAwT,iBAAA,SAAiBD,GACXnT,KAAK2R,wBAAwBwB,EAAc1Q,QAC7C0Q,EAAcV,WAAY,EAC1BU,EAAclR,KAAKa,EAAIqQ,EAAc1Q,MAAMK,EAC3CqQ,EAAclR,KAAKU,EAAIwQ,EAAc1Q,MAAME,EAC3CwQ,EAAcvQ,gBAEduQ,EAAcV,WAAY,EACrBzS,KAAK2B,SAASwG,iBACjBkL,QAAQC,KAAK,oDACX9C,KAAKE,UAAUyC,EAAclR,KAAM,CAAC,OAAQ,OAAQ,IAAK,SAKjEqO,EAAA1Q,UAAA+R,wBAAA,SAAwB4C,EAAuBC,QAAA,IAAAA,IAAAA,EAAA,KACvB,IAAlBD,EAAQpG,OACVoG,EAAQpG,KAAOnO,KAAK2B,SAASkC,kBAET,IAAlB0Q,EAAQnG,OACVmG,EAAQnG,KAAOpO,KAAK2B,SAASmC,iBAE/B9D,KAAKwS,oBAGL,QADIiC,EADAC,EAAYF,EAAa7R,GAAK,EAE3B+R,EAAY1U,KAAKoO,KAAMsG,IAG5B,IAFAH,EAAQ5R,EAAI+R,EACZD,EAAYD,EAAa1R,GAAK,EACvB2R,EAAYzU,KAAKqP,QAASoF,IAE/B,GADAF,EAAQzR,EAAI2R,GACPzU,KAAK6C,eAAe0R,GACvB,OAAO,MAIPI,EAAe3U,KAAK2B,SAASiC,SAAW5D,KAAKoO,KAAOmG,EAAQnG,KAC5DwG,EAAkB5U,KAAK2B,SAAS+B,SAAW1D,KAAKqP,QAAUkF,EAAQpG,KAExE,QADkBnO,KAAKoO,MAAQpO,KAAKqP,SAAWsF,IAC7BC,GAChBL,EAAQzR,EAAI9C,KAAKqP,QACjBkF,EAAQ5R,EAAI,GACL,KACEgS,IACTJ,EAAQ5R,EAAI3C,KAAKoO,KACjBmG,EAAQzR,EAAI,GACL,IAKXwN,EAAA1Q,UAAAgS,yBAAA,SAAyB3P,OACjB4S,EAAU1V,OAAOC,OAAO,GAAI6C,GAElC,OADAjC,KAAK2R,wBAAwBkD,GACtBA,GAGTvE,EAAA1Q,UAAAiS,wBAAA,SAAwB5P,OAClB6S,EAAyC,CAACnS,EAAG,EAAGG,EAAG,GACvDgS,EAAe9U,KAAKwC,KAAKuS,QAAM,SAAEC,EAAWC,OACpCC,EAAa,CAACvS,EAAGsS,EAAKxS,MAAME,EAAIsS,EAAKxS,MAAM2L,KAAO,EAAGtL,EAAGmS,EAAKxS,MAAMK,EAAImS,EAAKxS,MAAM0L,KAAO,GAC/F,OAAqD,IAAjD1F,EAAc+B,aAAawK,EAAME,GAC5BA,EAEAF,IAERF,OAEGD,EAAU1V,OAAOC,OAAO,GAAI6C,GAElC,OADAjC,KAAK2R,wBAAwBkD,EAASC,GAC/BD,GAGTvE,EAAA1Q,UAAAmO,kBAAA,SAAkBjL,EAAWqS,EAAuCC,OAC5DC,EAAWF,EAAerS,EAAI9C,KAAK8O,aACzC,OAAIsG,EACKC,EAEArH,KAAK0E,IAAI2C,EAAU,IAI9B/E,EAAA1Q,UAAAsO,kBAAA,SAAkBvL,EAAWwS,EAAuCC,OAC5DC,EAAWF,EAAexS,EAAI3C,KAAK+O,cACzC,OAAIqG,EACKC,EAEArH,KAAK0E,IAAI2C,EAAU,IAI9B/E,EAAA1Q,UAAA0V,kBAAA,SAAkBxS,GAChB,OAAOA,EAAI9C,KAAK8O,aAGlBwB,EAAA1Q,UAAA2V,kBAAA,SAAkB5S,GAChB,OAAOA,EAAI3C,KAAK+O,cAMXuB,EAAAkF,iCAAP,SAAwCvT,EAAoBiP,OAEpDuE,EAAwC,IAAdxT,EAAKkM,KAAa,EAAI,EAChDuH,EAAyC,IAAfxE,EAAM/C,KAAa,EAAI,EACjDwH,EAAsC,IAAd1T,EAAKmM,KAAa,EAAI,EAC9CwH,EAAuC,IAAf1E,EAAM9C,KAAa,EAAI,EACrD,OAAOnM,EAAKa,EAAI2S,EAA0BvE,EAAMpO,EAAIoO,EAAM/C,MACrDlM,EAAKa,EAAIb,EAAKkM,KAAO+C,EAAMpO,EAAI4S,GAC/BzT,EAAKU,EAAIgT,EAAwBzE,EAAMvO,EAAIuO,EAAM9C,MACjDnM,EAAKU,EAAIV,EAAKmM,KAAO8C,EAAMvO,EAAIiT,GAItCtF,EAAA1Q,UAAAiW,yBAAA,SAAyB5T,OACnByR,GAAsD,EAO1D,GANI1T,KAAKmL,QAAQ7F,uBACfoO,GAAa1T,KAAKmL,QAAQ7F,qBAAqBrD,KAE5CyR,GAAa1T,KAAK2T,mBAAmB1R,KACxCyR,GAAY,IAETA,EAAW,KACRE,EAAI5T,KAAK8V,2BAA2B7T,GACtC2R,IACFF,EAAYE,GAGhB,OAAOF,GAITpD,EAAA1Q,UAAAkW,2BAAA,SAA2B7T,GAGzB,QADII,EADA+P,EAAuBpS,KAAKwC,KAAK9C,OAAS,EAEvC0S,GAAgB,EAAGA,IAExB,IADA/P,EAASrC,KAAKwC,KAAK4P,IACR3P,QAAUR,GAAQqO,EAAkBkF,iCAAiCnT,EAAOI,MAAOR,GAC5F,OAAOI,EAGX,OAAO,GAKMiO,EAAA2C,kBAAf,SAAiCvT,EAAgBqW,EAAqBC,OAC9DC,EAAYjI,KAAK0E,IAAIhT,EAAQsO,KAAKC,MAAM8H,EAAcC,IAE5D,OAAIC,EAAY,EACP,EAGFA,GAAa,uBAxhBvBC,EAAAA,UAAS/M,KAAA,CAAC,CACTgN,SAAU,WACVC,SAAA,4WAEAC,cAAeC,EAAAA,kBAAkB3V,m6BA3BjC4V,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAoDGC,EAAAA,OAAMvN,KAAA,CAACoN,EAAAA,qBA7CpBI,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA6CwCC,EAAAA,OAAMvN,KAAA,CAACwN,EAAAA,oBAtDxDC,EAAAA,kBAAiBJ,WAAA,CAAA,CAAAC,KAuDJC,EAAAA,OAAMvN,KAAA,CAACyN,EAAAA,4BAlDpBC,EAAAA,OAAML,WAAA,CAAA,CAAAC,KAmDOC,EAAAA,OAAMvN,KAAA,CAAC0N,EAAAA,8CAxBnBC,EAAAA,SAmhBHxG,EApjBA,GCMA,MAAA,aCNA,ICGI1L,EACAC,EDJJkS,EAAA,WA0BE,SAAAA,EAAYC,GACVhX,KAAKiX,YAAc,GACnBjX,KAAKkX,gBAAkB,GACvBlX,KAAKmX,oBAAsB,GAC3BnX,KAAKoX,gBAAkB,GACvBJ,EAAiB,GAAIhX,KAAKqX,uBAC1BrX,KAAKgX,aAAeA,EACpBhX,KAAKwB,SAAWwV,EAAaxV,SAC7BxB,KAAKsX,WAAa,CAChBC,SAAU,CAACvX,KAAKwX,QAASxX,KAAKyX,SAAUzX,KAAK0X,SAAU1X,KAAK2X,SAC5DC,SAAU,CAAC5X,KAAK2X,QAAS3X,KAAKyX,SAAUzX,KAAK0X,SAAU1X,KAAKwX,SAC5DK,UAAW,CAAC7X,KAAKyX,SAAUzX,KAAK2X,QAAS3X,KAAKwX,QAASxX,KAAK0X,UAC5DI,UAAW,CAAC9X,KAAK0X,SAAU1X,KAAK2X,QAAS3X,KAAKwX,QAASxX,KAAKyX,WAE9DzX,KAAK8X,UAAY,YACjB9X,KAAK6X,UAAY,YACjB7X,KAAKuX,SAAW,WAChBvX,KAAK4X,SAAW,WA6RpB,OA1REb,EAAAnX,UAAA6B,QAAA,kBACSzB,KAAKwB,gBACLxB,KAAKgX,cAGdD,EAAAnX,UAAA4H,UAAA,SAAUuQ,EAAmBC,GAC3B,GAAIhY,KAAKwB,SAASG,SAAS6F,YAAcwQ,EAAS,CAChDhY,KAAKiY,iBAAmB,OAClBC,EAASlY,KAAKuT,KAAKvT,KAAKgX,aAAce,GAQ5C,OAPKG,GACHlY,KAAKmY,mBAEPnY,KAAKiY,iBAAmB,GACxBjY,KAAKkX,gBAAkB,GACvBlX,KAAKmX,oBAAsB,GAC3BnX,KAAKoY,eACEF,EAEP,OAAO,GAIXnB,EAAAnX,UAAAuY,iBAAA,WAEE,QADI5Y,EAAIS,KAAKkX,gBAAgBxX,OAAS,EAC/BH,GAAK,EAAGA,IACbS,KAAKqY,qBAAqBrY,KAAKkX,gBAAgB3X,KAInDwX,EAAAnX,UAAA0Y,aAAA,WAIE,QADIC,EAFAhZ,EAAI,EACFgD,EAAYvC,KAAKiX,YAAYvX,OAE5BH,EAAIgD,EAAGhD,KACZgZ,EAAavY,KAAKiX,YAAY1X,IACnBkD,MAAMK,EAAIyV,EAAWtW,KAAKa,GAAK,EAC1CyV,EAAW9V,MAAME,EAAI4V,EAAWtW,KAAKU,GAAK,EAC1C4V,EAAWzF,UAEb9S,KAAKiX,YAAc,GACnBjX,KAAKoX,gBAAkB,IAGzBL,EAAAnX,UAAA4Y,eAAA,WAIE,QADID,EAFAhZ,EAAI,EACFgD,EAAYvC,KAAKiX,YAAYvX,OAE5BH,EAAIgD,EAAGhD,KACZgZ,EAAavY,KAAKiX,YAAY1X,IACnBkZ,iBAAiBF,EAAW9V,MAAO8V,EAAWtW,MAE3DjC,KAAKiX,YAAc,GACnBjX,KAAKoX,gBAAkB,IAGzBL,EAAAnX,UAAA8Y,cAAA,WAGE,QAFInZ,EAAYS,KAAKiX,YAAYvX,OAAS,EACtCiZ,GAAS,EACNpZ,GAAK,EAAGA,IACTS,KAAK4Y,gBAAgB5Y,KAAKiX,YAAY1X,GAAIA,KAC5CoZ,GAAS,GAGTA,GACF3Y,KAAK0Y,iBAID3B,EAAAnX,UAAAyX,qBAAR,WACE,OAAOrJ,KAAK6K,SAASC,SAAS,IAAIC,QAAQ,WAAY,IAAIC,OAAO,EAAG,KAG9DjC,EAAAnX,UAAAwY,aAAR,WAC0BpY,KAAKwB,SAASgB,KAAKyW,QAAM,SAAE3N,GAAsC,OAAAA,EAAO,MAChF4N,SAAO,SAAE5N,GAAuC,cAAOA,EAAO,OAGxEyL,EAAAnX,UAAA2T,KAAR,SAAayD,EAA8Ce,GACzD,GAAI/X,KAAKwB,SAASmS,mBAAmBqD,EAAavU,OAChD,OAAO,EAET,GAAkB,KAAdsV,EACF,OAAO,EAMT,QAHsBoB,EADhB1O,EAA2CzK,KAAKwB,SAAS8S,kBAAkB0C,EAAavU,OAC1FlD,EAAIkL,EAAE/K,OAAS,EACf0Z,GAAW,EACT1O,EAA2C,GAC1CnL,GAAK,EAAGA,IAAK,CAKlB,IAJA4Z,EAAgB1O,EAAElL,IACK,KACrB4Z,EAAkB,GAAInZ,KAAKqX,wBAEzB8B,IAAkBnZ,KAAKgX,aAAc,CACvCoC,GAAW,EACX,MAEF,IAAKD,EAAcE,eAAgB,CACjCD,GAAW,EACX,MAKF,GAHgBpZ,KAAKkX,gBAAgBoC,MAAI,SAAEhO,GACzC,OAAOA,EAAO,KAAM6N,EAAkB,MAE3B,CACXC,GAAW,EACX,MAEF,GAAIpZ,KAAKsX,WAAWS,GAAW,GAAGjY,KAAKE,KAAMmZ,EAAenC,GAC1DhX,KAAKiY,iBAAiB1E,KAAK4F,GAC3BzO,EAAE6I,KAAK4F,QACF,GAAInZ,KAAKsX,WAAWS,GAAW,GAAGjY,KAAKE,KAAMmZ,EAAenC,GACjEhX,KAAKiY,iBAAiB1E,KAAK4F,GAC3BzO,EAAE6I,KAAK4F,QACF,GAAInZ,KAAKsX,WAAWS,GAAW,GAAGjY,KAAKE,KAAMmZ,EAAenC,GACjEhX,KAAKiY,iBAAiB1E,KAAK4F,GAC3BzO,EAAE6I,KAAK4F,OACF,CAAA,IAAInZ,KAAKsX,WAAWS,GAAW,GAAGjY,KAAKE,KAAMmZ,EAAenC,GAG5D,CACLoC,GAAW,EACX,MAJApZ,KAAKiY,iBAAiB1E,KAAK4F,GAC3BzO,EAAE6I,KAAK4F,IAMX,IAAKC,IACH7Z,EAAIS,KAAKiY,iBAAiBsB,YAAY7O,EAAE,MAC/B,EAEP,QADI8O,EAAIxZ,KAAKiY,iBAAiBvY,OAAS,EAChC8Z,GAAKja,EAAGia,IACbL,EAAgBnZ,KAAKiY,iBAAiBuB,GACtCxZ,KAAKiY,iBAAiBwB,MACtBzZ,KAAKqY,qBAAqBc,GAC1BnZ,KAAK0Z,qBAAqBP,GAIhC,OAAOC,GAGDrC,EAAAnX,UAAA6X,SAAR,SAAiBkC,EAAqD3C,GACpE,QAAKhX,KAAKwB,SAASG,SAASgG,eAAeG,QAG3C9H,KAAK4Z,gBAAgBD,GACrBA,EAAoBlX,MAAME,EAAIqU,EAAavU,MAAME,EAAIqU,EAAavU,MAAM2L,KACpEpO,KAAKuT,KAAKoG,EAAqB3Z,KAAK6X,YACtC8B,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,IACV,IAEP3Z,KAAKqY,qBAAqBsB,IAErB,KAGD5C,EAAAnX,UAAA8X,SAAR,SAAiBiC,EAAqD3C,GACpE,QAAKhX,KAAKwB,SAASG,SAASgG,eAAeC,QAG3C5H,KAAK4Z,gBAAgBD,GACrBA,EAAoBlX,MAAME,EAAIqU,EAAavU,MAAME,EAAIgX,EAAoBlX,MAAM2L,KAC3EpO,KAAKuT,KAAKoG,EAAqB3Z,KAAK8X,YACtC6B,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,IACV,IAEP3Z,KAAKqY,qBAAqBsB,IAErB,KAGD5C,EAAAnX,UAAA+X,QAAR,SAAgBgC,EAAqD3C,GACnE,QAAKhX,KAAKwB,SAASG,SAASgG,eAAeE,OAG3C7H,KAAK4Z,gBAAgBD,GACrBA,EAAoBlX,MAAMK,EAAIkU,EAAavU,MAAMK,EAAIkU,EAAavU,MAAM0L,KACpEnO,KAAKuT,KAAKoG,EAAqB3Z,KAAK4X,WACtC+B,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,IACV,IAEP3Z,KAAKqY,qBAAqBsB,IAErB,KAGD5C,EAAAnX,UAAA4X,QAAR,SAAgBmC,EAAqD3C,GACnE,QAAKhX,KAAKwB,SAASG,SAASgG,eAAeI,OAG3C/H,KAAK4Z,gBAAgBD,GACrBA,EAAoBlX,MAAMK,EAAIkU,EAAavU,MAAMK,EAAI6W,EAAoBlX,MAAM0L,KAC3EnO,KAAKuT,KAAKoG,EAAqB3Z,KAAKuX,WACtCoC,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,IACV,IAEP3Z,KAAKqY,qBAAqBsB,IAErB,KAGD5C,EAAAnX,UAAAga,gBAAR,SAAwB5C,OAClBzX,EAAIS,KAAKkX,gBAAgB5M,QAAQ0M,IAC1B,IAAPzX,IACFA,EAAIS,KAAKkX,gBAAgB3D,KAAKyD,GAAgB,EAC9ChX,KAAKmX,oBAAoB5X,GAAK,IAEhCS,KAAKmX,oBAAoB5X,GAAGgU,KAAK,CAACzQ,EAAGkU,EAAavU,MAAMK,EAAGH,EAAGqU,EAAavU,MAAME,KAG3EoU,EAAAnX,UAAAyY,qBAAR,SAA6BrB,OACrBzX,EAAIS,KAAKkX,gBAAgB5M,QAAQ0M,GACjC8C,EAAe9Z,KAAKmX,oBAAoB5X,GAAGka,MAC5CK,IAGL9C,EAAavU,MAAMK,EAAIgX,EAAahX,EACpCkU,EAAavU,MAAME,EAAImX,EAAanX,EACpCqU,EAAalE,UACR9S,KAAKmX,oBAAoB5X,GAAGG,SAC/BM,KAAKkX,gBAAgBzD,OAAOlU,EAAG,GAC/BS,KAAKmX,oBAAoB1D,OAAOlU,EAAG,MAI/BwX,EAAAnX,UAAAia,YAAR,SAAoB7C,GAClB,GAAIhX,KAAKiX,YAAY3M,QAAQ0M,GAAgB,EAC3ChX,KAAKiX,YAAY1D,KAAKyD,GACtBhX,KAAKoX,gBAAgB7D,KAAK,CAAC,CAACzQ,EAAGkU,EAAa/U,KAAKa,GAAK,EAAGH,EAAGqU,EAAa/U,KAAKU,GAAK,GACjF,CAACG,EAAGkU,EAAavU,MAAMK,EAAGH,EAAGqU,EAAavU,MAAME,SAC7C,KACCpD,EAAIS,KAAKiX,YAAY3M,QAAQ0M,GACnChX,KAAKoX,gBAAgB7X,GAAGgU,KAAK,CAACzQ,EAAGkU,EAAavU,MAAMK,EAAGH,EAAGqU,EAAavU,MAAME,MAIzEoU,EAAAnX,UAAAma,iBAAR,SAAyBxa,GACnBA,GAAK,IACPS,KAAKiX,YAAYxD,OAAOlU,EAAG,GAC3BS,KAAKoX,gBAAgB3D,OAAOlU,EAAG,KAI3BwX,EAAAnX,UAAA8Z,qBAAR,SAA6B1C,OACrBzX,EAAIS,KAAKiX,YAAY3M,QAAQ0M,GAC/BzX,GAAK,IACPS,KAAKoX,gBAAgB7X,GAAGka,MACnBzZ,KAAKoX,gBAAgB1X,SACxBM,KAAKiX,YAAYxD,OAAOlU,EAAG,GAC3BS,KAAKoX,gBAAgB3D,OAAOlU,EAAG,MAK7BwX,EAAAnX,UAAAgZ,gBAAR,SAAwBL,EAA4ChZ,GAKlE,QAFIya,EAAclX,EAAGH,EAFfsX,EAAOja,KAAKoX,gBAAgB7X,GAC9Bia,EAAIS,EAAKva,OAAS,EAElBiZ,GAAS,EACNa,GAAK,EAAGA,IACbQ,EAAeC,EAAKT,GACpB1W,EAAIyV,EAAW9V,MAAMK,EACrBH,EAAI4V,EAAW9V,MAAME,EACrB4V,EAAW9V,MAAMK,EAAIkX,EAAalX,EAClCyV,EAAW9V,MAAME,EAAIqX,EAAarX,EAC7B3C,KAAKwB,SAASqS,iBAAiB0E,EAAW9V,QAK7C8V,EAAW9V,MAAMK,EAAIA,EACrByV,EAAW9V,MAAME,EAAIA,IALrB4V,EAAWzF,UACXmH,EAAKxG,OAAO+F,EAAI,EAAGS,EAAKva,OAAS8Z,EAAI,GACrCb,GAAS,GASb,OAHIsB,EAAKva,OAAS,GAChBM,KAAK+Z,iBAAiBxa,GAEjBoZ,uBAjUV5V,EAAAA,sDAHOmX,KAsURnD,EAxUA,OCMIoD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,SAAgBC,EAAOlZ,EAAsC6L,EAAcK,EAAasB,EAAeC,EAChFjI,EAAe2T,EACfC,EAAiCnJ,EAAkBoJ,GACxEjW,EAAoBpD,EAASG,SAASiD,kBACtCC,EAAcrD,EAASG,SAASkD,YAChCsV,EAAkB3Y,EAAS8J,GAC3B8O,EAAc3I,EACd4I,EAAkBQ,MAEZ7I,EAAcmI,EAAgBnI,YAC9BC,EAAekI,EAAgBlI,aAC/B6I,EAAaX,EAAgB7M,WAC7ByN,EAAYZ,EAAgBxM,UAC5BqN,EAAgBtN,EAAMqN,EACtBE,EAAmBhJ,EAAe8I,EAAYrN,EAAMuB,EAE1D,IAAKzN,EAASG,SAAS2G,sBACrB,GAAIqS,EAAUjR,QAAU1C,EAAE0C,SAAWuR,EAAmBrW,EAAmB,CAEzE,GADAsW,IACKd,GAAeC,IAAoBA,EAAgB/a,GAAMmb,EAC5D,OAEFA,EAAYU,EAAc,EAAGP,EAAuBD,QAC/C,GAAIA,EAAUjR,QAAU1C,EAAE0C,SAAWqR,EAAY,GAAKC,EAAgBpW,EAAmB,CAE9F,GADAwW,IACKhB,GAAeC,IAAoBA,EAAgB7a,GAAMgb,EAC5D,OAEFA,EAAYW,GAAe,EAAGP,EAAuBD,QAC5CA,EAAUjR,UAAY1C,EAAE0C,SACjC2R,QAIEC,EAAkBR,EAAa9I,EAAc3E,EAAO2B,EACpDuM,EAAiBlO,EAAOyN,EAE9B,IAAKtZ,EAASG,SAAS0G,wBACrB,GAAIsS,EAAUnR,QAAUxC,EAAEwC,SAAW8R,GAAmB1W,EAAmB,CAEzE,GADA4W,IACKpB,GAAeC,IAAoBA,EAAgBrT,GAAMsT,EAC5D,OAEFA,EAAYmB,EAAgB,EAAGb,EAAuBD,QACjD,GAAIA,EAAUnR,QAAUxC,EAAEwC,SAAWsR,EAAa,GAAKS,EAAiB3W,EAAmB,CAEhG,GADA8W,IACKtB,GAAeC,IAAoBA,EAAgBpT,GAAMsT,EAC5D,OAEFA,EAAYkB,GAAiB,EAAGb,EAAuBD,QAC9CA,EAAUnR,UAAYxC,EAAEwC,SACjCmS,IAKN,SAASR,EAAcS,EAAchB,EAAiCD,OAChEjR,EAAUiR,EAAUjR,QACxB,OAAOmS,aAAW,aACX1B,IAA6B,IAAVyB,GAAezB,EAAgBxM,UAAY9I,EAAc,IAC/EwW,IAEFlB,EAAgBxM,WAAaiO,EAAO/W,EACpC6E,GAAWkS,EAAO/W,EAClB+V,EAAsB,CAACpR,QAASmR,EAAUnR,QAASE,QAASA,MAzEvC,IA6EzB,SAAS+R,EAAgBG,EAAchB,EAAiCD,OAClEnR,EAAUmR,EAAUnR,QACxB,OAAOqS,aAAW,aACX1B,IAA6B,IAAVyB,GAAezB,EAAgB7M,WAAazI,EAAc,IAChF8W,IAEFxB,EAAgB7M,YAAcsO,EAAO/W,EAErC+V,EAAsB,CAACpR,QADvBA,GAAWoS,EAAO/W,EACuB6E,QAASiR,EAAUjR,YArFvC,IAyFzB,SAAgBoS,IACdH,IACAN,IACAlB,OAAkBpV,EAGpB,SAAS4W,IACPD,IACAF,IAGF,SAASH,IACPH,IACAE,IAGF,SAASM,IACHpB,IACFyB,cAAczB,GACdA,EAAY,GAIhB,SAASkB,IACHjB,IACFwB,cAAcxB,GACdA,EAAY,GAIhB,SAASa,IACHX,IACFsB,cAActB,GACdA,EAAY,GAIhB,SAASS,IACHV,IACFuB,cAAcvB,GACdA,EAAY,GCtIhB,IAAAwB,EAAA,WAWE,SAAAA,EAAYhF,GACVhX,KAAKgX,aAAeA,EACpBhX,KAAKwB,SAAWwV,EAAaxV,SAmFjC,OAhFEwa,EAAApc,UAAA6B,QAAA,kBACSzB,KAAKwB,gBACLxB,KAAKgX,oBACLhX,KAAKic,YAGdD,EAAApc,UAAAsc,UAAA,WACMlc,KAAKwB,SAASG,SAAS2F,OACzBtH,KAAKmc,gBACLnc,KAAKoc,UAAUpc,KAAKgX,gBAIxBgF,EAAApc,UAAAuc,cAAA,WACE,GAAInc,KAAKic,WAAY,KACbnZ,EAAY9C,KAAKic,WAAWxZ,MAAMK,EAClCH,EAAY3C,KAAKic,WAAWxZ,MAAME,EACxC3C,KAAKic,WAAWxZ,MAAMK,EAAI9C,KAAKic,WAAWha,KAAKa,GAAK,EACpD9C,KAAKic,WAAWxZ,MAAME,EAAI3C,KAAKic,WAAWha,KAAKU,GAAK,EAChD3C,KAAKwB,SAASqB,eAAe7C,KAAKic,WAAWxZ,QAC/CzC,KAAKic,WAAWxZ,MAAMK,EAAIA,EAC1B9C,KAAKic,WAAWxZ,MAAME,EAAIA,IAE1B3C,KAAKic,WAAWnJ,UAChB9S,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKgX,aAAa/U,KAAKa,GAAK,EACxD9C,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKgX,aAAa/U,KAAKU,GAAK,EACxD3C,KAAKic,gBAAalX,KAMxBiX,EAAApc,UAAAyc,gBAAA,WACMrc,KAAKic,aACPjc,KAAKic,WAAWxZ,MAAMK,EAAI9C,KAAKic,WAAWha,KAAKa,GAAK,EACpD9C,KAAKic,WAAWxZ,MAAME,EAAI3C,KAAKic,WAAWha,KAAKU,GAAK,EACpD3C,KAAKic,WAAWnJ,UAChB9S,KAAKic,gBAAalX,IAItBiX,EAAApc,UAAA0c,YAAA,WACMtc,KAAKic,aACPjc,KAAKic,WAAWxD,iBAAiBzY,KAAKic,WAAWxZ,MAAOzC,KAAKic,WAAWha,MACxEjC,KAAKic,gBAAalX,IAItBiX,EAAApc,UAAAwc,UAAA,SAAUG,OACJC,EAMJ,IAJEA,EADExc,KAAKwB,SAASG,SAAS4F,kBACDvH,KAAKwB,SAASqU,yBAAyB0G,EAAS9Z,OAEhDzC,KAAKwB,SAASqB,eAAe0Z,EAAS9Z,UAET,IAA1B+Z,GAAkCA,EAAsBnD,eAAgB,KAC7FM,EAAsD6C,EACtDC,EAAiB9C,EAAoBlX,MAAMK,EAC3C4Z,EAAiB/C,EAAoBlX,MAAME,EAC3Cga,EAAQJ,EAAS9Z,MAAMK,EACvB8Z,EAAQL,EAAS9Z,MAAME,EAC7BgX,EAAoBlX,MAAMK,EAAIyZ,EAASta,KAAKa,GAAK,EACjD6W,EAAoBlX,MAAME,EAAI4Z,EAASta,KAAKU,GAAK,EACjD4Z,EAAS9Z,MAAMK,EAAI6W,EAAoB1X,KAAKa,GAAK,EACjDyZ,EAAS9Z,MAAME,EAAIgX,EAAoB1X,KAAKU,GAAK,EAC7C3C,KAAKwB,SAASqB,eAAe8W,EAAoBlX,QAAUzC,KAAKwB,SAASqB,eAAe0Z,EAAS9Z,QACnG8Z,EAAS9Z,MAAMK,EAAI6Z,EACnBJ,EAAS9Z,MAAME,EAAIia,EACnBjD,EAAoBlX,MAAMK,EAAI2Z,EAC9B9C,EAAoBlX,MAAME,EAAI+Z,IAE9B/C,EAAoB7G,UACpB9S,KAAKic,WAAatC,EACd3Z,KAAKwB,SAASG,SAAS4F,oBACzBvH,KAAKgX,aAAayB,iBAAiBzY,KAAKgX,aAAavU,MAAOzC,KAAKgX,aAAa/U,MAC9EjC,KAAKsc,sCAtFdvZ,EAAAA,sDAHOmX,KA8FR8B,EAhGA,GCAA,IAAAa,EAAA,WAmDE,SAAAA,EAAY7F,EAA8CxV,EAA8CsK,GAAA9L,KAAA8L,KAAAA,EAFxG9L,KAAA0T,WAAsD,EAGpD1T,KAAKgX,aAAeA,EACpBhX,KAAKwB,SAAWA,EAChBxB,KAAK2a,UAAY,CACfnR,QAAS,EACTE,QAAS,GAEX1J,KAAKia,KAAO,GAuRhB,OApRE4C,EAAAjd,UAAA6B,QAAA,WACMzB,KAAKwB,SAASsJ,cAChB9K,KAAKwB,SAASsJ,cAAa,UAEtB9K,KAAKgX,oBACLhX,KAAKwB,gBACLxB,KAAK0T,UACR1T,KAAK8c,YACP9c,KAAK8c,YACL9c,KAAK+c,eAITF,EAAAjd,UAAAod,UAAA,SAAUhW,GAAV,IAAAiE,EAAAjL,KACMgH,EAAEiW,OAAqB,IAAZjW,EAAEiW,QAIbjd,KAAKwB,SAAS2J,QAAQ/E,WAAapG,KAAKwB,SAAS2J,QAAQ/E,UAAUO,OACrE3G,KAAKwB,SAAS2J,QAAQ/E,UAAUO,MAAM3G,KAAKgX,aAAa/U,KAAMjC,KAAKgX,aAAchQ,GAGnFA,EAAEyF,kBACFzF,EAAEwF,iBACFxM,KAAKkd,aAAeld,KAAKmd,SAAS3R,KAAKxL,MACvCA,KAAKod,iBAAmBpd,KAAKqd,SAAS7R,KAAKxL,MAE3CA,KAAK8L,KAAKC,mBAAiB,WACzBd,EAAKqS,UAAYrS,EAAK+L,aAAa5L,SAASC,OAAO,WAAY,YAAaJ,EAAKiS,cACjFjS,EAAKsS,UAAYtS,EAAKzJ,SAAS4J,SAASC,OAAOJ,EAAKzJ,SAAS8J,GAAI,YAAaL,EAAKiS,iBAErFld,KAAKwd,QAAUxd,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,UAAWrL,KAAKod,kBAC7Epd,KAAKyd,WAAazd,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAAcrL,KAAKod,kBACnFpd,KAAK0d,aAAe1d,KAAKgX,aAAa5L,SAASC,OAAO,SAAU,OAAQrL,KAAKod,kBAC7Epd,KAAK2d,SAAW3d,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,WAAYrL,KAAKod,kBAC/Epd,KAAK4d,YAAc5d,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,cAAerL,KAAKod,kBACrFpd,KAAKgX,aAAa5L,SAASmE,SAASvP,KAAKgX,aAAa1L,GAAI,wBAC1DtL,KAAKqE,OAASrE,KAAKwB,SAASG,SAAS0C,OACrCrE,KAAK8a,WAAa9a,KAAKwB,SAAS8J,GAAGgC,WAAatN,KAAKwB,SAAS8J,GAAGwP,WACjE9a,KAAK+a,UAAY/a,KAAKwB,SAAS8J,GAAGqC,UAAY3N,KAAKwB,SAAS8J,GAAGyP,UAC/D/a,KAAKqN,KAAOrN,KAAKgX,aAAa3J,KAAOrN,KAAKqE,OAC1CrE,KAAK0N,IAAM1N,KAAKgX,aAAatJ,IAAM1N,KAAKqE,OACxCrE,KAAK6d,gBAAkB7W,EAAEwC,QACzBxJ,KAAK8d,gBAAkB9W,EAAE0C,QACzB1J,KAAKgP,MAAQhP,KAAKgX,aAAahI,MAC/BhP,KAAKiP,OAASjP,KAAKgX,aAAa/H,OAC5BjP,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,IAC9CtB,KAAK+d,SAAY/W,EAAEwC,QAAUxJ,KAAKwB,SAAS8J,GAAGgH,YAActS,KAAKgX,aAAa3J,KAE9ErN,KAAK+d,SAAW/W,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAKqE,OAASrE,KAAKqN,KAEnErN,KAAKge,QAAUhX,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAKqE,OAASrE,KAAK0N,IAC/D1N,KAAKwB,SAASqJ,WAAa7K,KAAKgX,aAAavU,MAC7CzC,KAAKwB,SAASsJ,cAAa,GAC3B9K,KAAKuT,KAAO,IAAIwD,EAAa/W,KAAKgX,cAClChX,KAAKsH,KAAO,IAAI0U,EAAahc,KAAKgX,cAClChX,KAAKwB,SAASsP,gBAAiB,EAC/B9Q,KAAKwB,SAASqR,aACd7S,KAAKia,KAAK1G,KAAK,CAACzQ,EAAG9C,KAAKgX,aAAa/U,KAAKa,GAAK,EAAGH,EAAG3C,KAAKgX,aAAa/U,KAAKU,GAAK,MAGnFka,EAAAjd,UAAAud,SAAA,SAASnW,GACPA,EAAEyF,kBACFzF,EAAEwF,iBACF/D,EAAcc,gBAAgBvC,GAC9BhH,KAAK8a,WAAa9a,KAAKwB,SAAS8J,GAAGgC,WAAatN,KAAKwB,SAAS8J,GAAGwP,WACjE9a,KAAK+a,UAAY/a,KAAKwB,SAAS8J,GAAGqC,UAAY3N,KAAKwB,SAAS8J,GAAGyP,UAC/DL,EAAO1a,KAAKwB,SAAUxB,KAAKqN,KAAMrN,KAAK0N,IAAK1N,KAAKgP,MAAOhP,KAAKiP,OAAQjI,EAAGhH,KAAK2a,UAC1E3a,KAAKie,uCAAuCzS,KAAKxL,OAEnDA,KAAKie,uCAAuCjX,IAG9C6V,EAAAjd,UAAAqe,uCAAA,SAAuCjX,GAAvC,IAAAiE,EAAAjL,KACMA,KAAKwB,SAAS2J,QAAQjF,MACxBlG,KAAKke,+BAA+BlX,EAAGhH,KAAKwB,SAAS2J,QAAQjF,OAE7DlG,KAAKme,kCAAkCnX,GAEzChH,KAAK4a,wBACL5a,KAAK2a,UAAUnR,QAAUxC,EAAEwC,QAC3BxJ,KAAK2a,UAAUjR,QAAU1C,EAAE0C,QAC3B1J,KAAK8L,KAAKsS,KAAG,WACXnT,EAAKzJ,SAASqR,iBAIlBgK,EAAAjd,UAAAse,+BAAA,SAA+BlX,EAAQd,GACrClG,KAAKqN,KAAOrN,KAAK6d,iBAAoB7W,EAAEwC,QAAUxJ,KAAK6d,iBAAmB3X,EAASlG,KAAK8a,WAAa9a,KAAK+d,SACzG/d,KAAK0N,IAAM1N,KAAK8d,iBAAoB9W,EAAE0C,QAAU1J,KAAK8d,iBAAmB5X,EAAUlG,KAAK+a,UAAY/a,KAAKge,SAG1GnB,EAAAjd,UAAAue,kCAAA,SAAkCnX,GAC5BhH,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,IAC9CtB,KAAKqN,KAAOrN,KAAKwB,SAAS8J,GAAGgH,YAActL,EAAEwC,QAAUxJ,KAAK+d,SAE5D/d,KAAKqN,KAAOrG,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAK+d,SAGjD/d,KAAK0N,IAAM1G,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAKge,SAG/CnB,EAAAjd,UAAAyd,SAAA,SAASrW,GAAT,IAAAiE,EAAAjL,KACEgH,EAAEyF,kBACFzF,EAAEwF,iBAEFsP,IACA9b,KAAK0d,eACL1d,KAAKsd,YACLtd,KAAKwd,UACLxd,KAAKyd,aACLzd,KAAKud,YACLvd,KAAK2d,WACL3d,KAAK4d,cACL5d,KAAKgX,aAAa5L,SAASuE,YAAY3P,KAAKgX,aAAa1L,GAAI,wBAC7DtL,KAAKwB,SAASsP,gBAAiB,EAC/B9Q,KAAKwB,SAASqR,aACd7S,KAAKia,KAAO,GACRja,KAAKwB,SAAS2J,QAAQ/E,WAAapG,KAAKwB,SAAS2J,QAAQ/E,UAAUM,KACrE2X,QAAQC,QAAQte,KAAKwB,SAAS2J,QAAQ/E,UAAUM,KAAK1G,KAAKgX,aAAa/U,KAAMjC,KAAKgX,aAAchQ,IAC7FuX,KAAKve,KAAKwe,SAAShT,KAAKxL,MAAOA,KAAKye,WAAWjT,KAAKxL,OAEvDA,KAAKwe,WAEPlV,YAAU,WACJ2B,EAAKzJ,WACPyJ,EAAKzJ,SAASqJ,WAAa,KAC3BI,EAAKzJ,SAASsJ,cAAa,QAKjC+R,EAAAjd,UAAA6e,WAAA,WACEze,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKgX,aAAa/U,KAAKa,GAAK,EACxD9C,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKgX,aAAa/U,KAAKU,GAAK,EACxD3C,KAAKgX,aAAalE,UACd9S,KAAKuT,MACPvT,KAAKuT,KAAK+E,eAERtY,KAAKsH,MACPtH,KAAKsH,KAAK+U,kBAERrc,KAAKuT,OACPvT,KAAKuT,KAAK9R,iBACHzB,KAAKuT,MAEVvT,KAAKsH,OACPtH,KAAKsH,KAAK7F,iBACHzB,KAAKsH,OAIhBuV,EAAAjd,UAAA4e,SAAA,WACMxe,KAAKwB,SAASG,SAASyE,UAAUQ,eAAiB5G,KAAKwB,SAAS2J,QAAQ/E,WACvEpG,KAAKwB,SAAS2J,QAAQ/E,UAAUS,uBAChC7G,KAAK0T,YAAgC,IAAnB1T,KAAK0T,WAAsB1T,KAAK0T,UAAUjR,OAC/DzC,KAAKwB,SAAS2J,QAAQ/E,UAAUS,sBAAsB7G,KAAKgX,aAAa/U,KAAMjC,KAAK0T,UAAUzR,KAAMjC,KAAKwB,UAE1GxB,KAAK0T,WAAY,EACjB1T,KAAKgX,aAAalE,UAClB9S,KAAKgX,aAAayB,iBAAiBzY,KAAKgX,aAAavU,MAAOzC,KAAKgX,aAAa/U,MAC1EjC,KAAKuT,MACPvT,KAAKuT,KAAKiF,iBAERxY,KAAKsH,MACPtH,KAAKsH,KAAKgV,cAERtc,KAAKuT,OACPvT,KAAKuT,KAAK9R,iBACHzB,KAAKuT,MAEVvT,KAAKsH,OACPtH,KAAKsH,KAAK7F,iBACHzB,KAAKsH,OAIhBuV,EAAAjd,UAAAgb,sBAAA,WAgBE,GAfA5a,KAAKwB,SAASqJ,WAAa7K,KAAKgX,aAAavU,MAC7CzC,KAAK0e,UAAY1e,KAAKwB,SAASuM,kBAAkB/N,KAAKqN,KAAMW,KAAKa,OACjE7O,KAAK2e,UAAY3e,KAAKwB,SAAS0M,kBAAkBlO,KAAK0N,IAAKM,KAAKa,OAChE7O,KAAK4e,gBAAkB5e,KAAKgX,aAAavU,MAAMK,EAC/C9C,KAAK6e,gBAAkB7e,KAAKgX,aAAavU,MAAME,EAC/C3C,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAK0e,UAC7B1e,KAAKwB,SAASmS,mBAAmB3T,KAAKgX,aAAavU,SACrDzC,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAK4e,iBAEnC5e,KAAKgX,aAAavU,MAAME,EAAI3C,KAAK2e,UAC7B3e,KAAKwB,SAASmS,mBAAmB3T,KAAKgX,aAAavU,SACrDzC,KAAKgX,aAAavU,MAAME,EAAI3C,KAAK6e,iBAEnC7e,KAAKwB,SAAS+L,aAAa2B,gBAAgBlP,KAAKgX,aAAa5L,SAAUpL,KAAKgX,aAAa1L,GAAItL,KAAKqN,KAAMrN,KAAK0N,KAEzG1N,KAAK4e,kBAAoB5e,KAAKgX,aAAavU,MAAMK,GAAK9C,KAAK6e,kBAAoB7e,KAAKgX,aAAavU,MAAME,EAAG,KACtGqX,EAAeha,KAAKia,KAAKja,KAAKia,KAAKva,OAAS,GAC9CqY,EAAY,GACZiC,EAAalX,EAAI9C,KAAKgX,aAAavU,MAAMK,EAC3CiV,EAAY/X,KAAKuT,KAAKqE,SACboC,EAAalX,EAAI9C,KAAKgX,aAAavU,MAAMK,EAClDiV,EAAY/X,KAAKuT,KAAKgE,SACbyC,EAAarX,EAAI3C,KAAKgX,aAAavU,MAAME,EAClDoV,EAAY/X,KAAKuT,KAAKsE,UACbmC,EAAarX,EAAI3C,KAAKgX,aAAavU,MAAME,IAClDoV,EAAY/X,KAAKuT,KAAKuE,WAExB9X,KAAKuT,KAAK/L,UAAUuQ,EAAW/X,KAAKwB,SAASG,SAAS8F,mBACtDzH,KAAKsH,KAAK4U,YACVlc,KAAK0T,UAAY1T,KAAKwB,SAASqB,eAAe7C,KAAKgX,aAAavU,OAC5DzC,KAAK0T,WACP1T,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAK4e,gBACjC5e,KAAKgX,aAAavU,MAAME,EAAI3C,KAAK6e,gBAC7B7e,KAAKwB,SAASG,SAASyE,UAAUQ,gBAAoC,IAAnB5G,KAAK0T,WAAsB1T,KAAK0T,UAAUjR,QAC9FzC,KAAKwB,SAASqJ,WAAa,OAG7B7K,KAAKia,KAAK1G,KAAK,CAACzQ,EAAG9C,KAAKgX,aAAavU,MAAMK,EAAGH,EAAG3C,KAAKgX,aAAavU,MAAME,IAE3E3C,KAAKuT,KAAKmF,gBAEZ1Y,KAAKwB,SAASsJ,cAAa,IAG7B+R,EAAAjd,UAAAoT,OAAA,eACQ8L,EAAa9e,KAAKgX,aAAaqC,gBAChCrZ,KAAKsG,SAAWwY,GACnB9e,KAAKsG,SAAWtG,KAAKsG,QACrBtG,KAAK+e,kBAAoB/e,KAAKgf,eAAexT,KAAKxL,MAClDA,KAAK8c,UAAY9c,KAAKgX,aAAa5L,SAASC,OAAOrL,KAAKgX,aAAa1L,GAAI,YAAatL,KAAK+e,mBAC3F/e,KAAK+c,WAAa/c,KAAKgX,aAAa5L,SAASC,OAAOrL,KAAKgX,aAAa1L,GAAI,aAActL,KAAK+e,oBACpF/e,KAAKsG,UAAYwY,IAC1B9e,KAAKsG,SAAWtG,KAAKsG,QACrBtG,KAAK8c,YACL9c,KAAK+c,eAITF,EAAAjd,UAAAof,eAAA,SAAehY,GAAf,IAAAiE,EAAAjL,KACE,KAAIgH,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,oCAAsC,GAG1H7B,EAAcmB,0BAA0B5J,KAAKwB,SAAUwF,IAI3D,GADAyB,EAAcc,gBAAgBvC,GACzBhH,KAAKwB,SAASG,SAASyE,UAAUC,eAIhC4C,EAAUK,YAAU,WACxB2B,EAAK+R,UAAUhW,GACfyX,MACCze,KAAKwB,SAASG,SAASyE,UAAUC,YAC9B4Y,EAAcjf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,UAAWoT,GACvES,EAAmBlf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAAcoT,GAC/Ef,EAAe1d,KAAKgX,aAAa5L,SAASC,OAAO,SAAU,OAAQoT,GACnEU,EAAkBnf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAItE,SAAoB+T,GAClB3W,EAAcc,gBAAgB6V,IAC1BpR,KAAKM,IAAI8Q,EAAU5V,QAAUxC,EAAEwC,SAAW,GAAKwE,KAAKM,IAAI8Q,EAAU1V,QAAU1C,EAAE0C,SAAW,IAC3F+U,OANEY,EAAiBrf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,WAAYoT,GAC3Ea,EAAoBtf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,cAAeoT,QAZrFze,KAAKgd,UAAUhW,GAqBjB,SAASyX,IACPpV,aAAaJ,GACbyU,IACAuB,IACAC,IACAC,IACAE,IACAC,0BApULvc,EAAAA,sDAPOmX,SAFAlX,SADY6T,EAAAA,UAiVpBgG,EAjVA,GCAA,IAAA0C,EAAA,WAyBE,SAAAA,EAAYvI,GACVhX,KAAKiX,YAAc,GACnBjX,KAAKoX,gBAAkB,GACvBpX,KAAKgX,aAAeA,EACpBhX,KAAKwB,SAAWwV,EAAaxV,SAC7BxB,KAAKsX,WAAa,CAChBC,SAAUvX,KAAKwX,QACfI,SAAU5X,KAAK2X,QACfE,UAAW7X,KAAKyX,SAChBK,UAAW9X,KAAK0X,UAElB1X,KAAK8X,UAAY,YACjB9X,KAAK6X,UAAY,YACjB7X,KAAKuX,SAAW,WAChBvX,KAAK4X,SAAW,WA6MpB,OA1ME2H,EAAA3f,UAAA6B,QAAA,kBACSzB,KAAKwB,gBACLxB,KAAKgX,cAGduI,EAAA3f,UAAA4H,UAAA,SAAUuQ,GACR,QAAI/X,KAAKwB,SAASG,SAASqG,iBAClBhI,KAAKuT,KAAKvT,KAAKgX,aAAce,IAMxCwH,EAAA3f,UAAA0Y,aAAA,WAIE,QADIC,EAFAhZ,EAAI,EACFgD,EAAYvC,KAAKiX,YAAYvX,OAE5BH,EAAIgD,EAAGhD,KACZgZ,EAAavY,KAAKiX,YAAY1X,IACnBkD,MAAMK,EAAIyV,EAAWtW,KAAKa,GAAK,EAC1CyV,EAAW9V,MAAME,EAAI4V,EAAWtW,KAAKU,GAAK,EAC1C4V,EAAW9V,MAAM0L,KAAOoK,EAAWtW,KAAKkM,MAAQ,EAChDoK,EAAW9V,MAAM+c,IAAMjH,EAAWtW,KAAKud,KAAO,EAC9CjH,EAAWzF,UAEb9S,KAAKiX,YAAc,GACnBjX,KAAKoX,gBAAkB,IAGzBmI,EAAA3f,UAAA4Y,eAAA,WAIE,QADID,EAFAhZ,EAAI,EACFgD,EAAYvC,KAAKiX,YAAYvX,OAE5BH,EAAIgD,EAAGhD,KACZgZ,EAAavY,KAAKiX,YAAY1X,IACnBkZ,iBAAiBF,EAAW9V,MAAO8V,EAAWtW,MAE3DjC,KAAKiX,YAAc,GACnBjX,KAAKoX,gBAAkB,IAGzBmI,EAAA3f,UAAA8Y,cAAA,WAGE,QAFInZ,EAAYS,KAAKiX,YAAYvX,OAAS,EACtCiZ,GAAS,EACNpZ,GAAK,EAAGA,IACTS,KAAK4Y,gBAAgB5Y,KAAKiX,YAAY1X,GAAIA,KAC5CoZ,GAAS,GAGTA,GACF3Y,KAAK0Y,iBAID6G,EAAA3f,UAAA2T,KAAR,SAAayD,EAA8Ce,OACnDyE,EAA6Bxc,KAAKwB,SAASqB,eAAemU,EAAavU,OAC7E,GAAI+Z,IAAmD,IAA1BA,GAC3BA,IAA0Bxc,KAAKgX,cAAgBwF,EAAsBiD,gBACrE,GAAIzf,KAAKsX,WAAWS,GAAWjY,KAAKE,KAAMwc,EAAuBxF,EAAce,GAC7E,OAAO,OAEJ,IAA8B,IAA1ByE,EACT,OAAO,EAET,OAAO,GAGD+C,EAAA3f,UAAA6X,SAAR,SAAiBkC,EAAqD3C,EACrDe,OACT2H,EAAU/F,EAAoBlX,MAAME,EACpCgd,EAAahG,EAAoBlX,MAAM2L,KAG7C,OAFAuL,EAAoBlX,MAAME,EAAIqU,EAAavU,MAAME,EAAIqU,EAAavU,MAAM2L,KACxEuL,EAAoBlX,MAAM2L,KAAOuR,EAAaD,EAAU/F,EAAoBlX,MAAME,EAC7E2N,EAAkBW,uBAAuB0I,EAAoBlX,MAAOuU,EAAavU,QAChFzC,KAAKwB,SAASmS,mBAAmBgG,EAAoBlX,QAMzDkX,EAAoBlX,MAAME,EAAI+c,EAC9B/F,EAAoBlX,MAAM2L,KAAOuR,GAE5B,IARLhG,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,GACjB3Z,KAAKuT,KAAKyD,EAAce,IACjB,IAQHwH,EAAA3f,UAAA8X,SAAR,SAAiBiC,EAAqD3C,EACrDe,OACT4H,EAAahG,EAAoBlX,MAAM2L,KAE7C,OADAuL,EAAoBlX,MAAM2L,KAAO4I,EAAavU,MAAME,EAAIgX,EAAoBlX,MAAME,EAC7E2N,EAAkBW,uBAAuB0I,EAAoBlX,MAAOuU,EAAavU,QAChFzC,KAAKwB,SAASmS,mBAAmBgG,EAAoBlX,QAMzDkX,EAAoBlX,MAAM2L,KAAOuR,GAE5B,IAPLhG,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,GACjB3Z,KAAKuT,KAAKyD,EAAce,IACjB,IAOHwH,EAAA3f,UAAA+X,QAAR,SAAgBgC,EAAqD3C,EACrDe,OACR6H,EAAUjG,EAAoBlX,MAAMK,EACpC+c,EAAalG,EAAoBlX,MAAM0L,KAG7C,OAFAwL,EAAoBlX,MAAMK,EAAIkU,EAAavU,MAAMK,EAAIkU,EAAavU,MAAM0L,KACxEwL,EAAoBlX,MAAM0L,KAAO0R,EAAaD,EAAUjG,EAAoBlX,MAAMK,EAC7EwN,EAAkBW,uBAAuB0I,EAAoBlX,MAAOuU,EAAavU,QAChFzC,KAAKwB,SAASmS,mBAAmBgG,EAAoBlX,QAMzDkX,EAAoBlX,MAAMK,EAAI8c,EAC9BjG,EAAoBlX,MAAM0L,KAAO0R,GAE5B,IARLlG,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,GACjB3Z,KAAKuT,KAAKyD,EAAce,IACjB,IAQHwH,EAAA3f,UAAA4X,QAAR,SAAgBmC,EAAqD3C,EACrDe,OACR8H,EAAalG,EAAoBlX,MAAM0L,KAE7C,OADAwL,EAAoBlX,MAAM0L,KAAO6I,EAAavU,MAAMK,EAAI6W,EAAoBlX,MAAMK,EAC7EwN,EAAkBW,uBAAuB0I,EAAoBlX,MAAOuU,EAAavU,QAChFzC,KAAKwB,SAASmS,mBAAmBgG,EAAoBlX,QAMzDkX,EAAoBlX,MAAM0L,KAAO0R,GAE5B,IAPLlG,EAAoB7G,UACpB9S,KAAK6Z,YAAYF,GACjB3Z,KAAKuT,KAAKyD,EAAce,IACjB,IAOHwH,EAAA3f,UAAAia,YAAR,SAAoB7C,GAClB,GAAIhX,KAAKiX,YAAY3M,QAAQ0M,GAAgB,EAC3ChX,KAAKiX,YAAY1D,KAAKyD,GACtBhX,KAAKoX,gBAAgB7D,KAAK,CACxB,CACEzQ,EAAGkU,EAAa/U,KAAKa,GAAK,EAC1BH,EAAGqU,EAAa/U,KAAKU,GAAK,EAC1BwL,KAAM6I,EAAa/U,KAAKkM,MAAQ,EAChCC,KAAM4I,EAAa/U,KAAKmM,MAAQ,GAElC,CACEtL,EAAGkU,EAAavU,MAAMK,EACtBH,EAAGqU,EAAavU,MAAME,EACtBwL,KAAM6I,EAAavU,MAAM0L,KACzBC,KAAM4I,EAAavU,MAAM2L,YAExB,KACC7O,EAAIS,KAAKiX,YAAY3M,QAAQ0M,GACnChX,KAAKoX,gBAAgB7X,GAAGgU,KACtB,CACEzQ,EAAGkU,EAAavU,MAAMK,EACtBH,EAAGqU,EAAavU,MAAME,EACtBwL,KAAM6I,EAAavU,MAAM0L,KACzBC,KAAM4I,EAAavU,MAAM2L,SAKzBmR,EAAA3f,UAAAma,iBAAR,SAAyBxa,GACnBA,GAAK,IACPS,KAAKiX,YAAYxD,OAAOlU,EAAG,GAC3BS,KAAKoX,gBAAgB3D,OAAOlU,EAAG,KAI3BggB,EAAA3f,UAAAgZ,gBAAR,SAAwBL,EAA4ChZ,GAIlE,QADIya,EAAoElX,EAAGH,EAAGwL,EAAMC,EAF9E6L,EAAOja,KAAKoX,gBAAgB7X,GAC9Bia,EAAIS,EAAKva,OAAS,EAEf8Z,GAAK,EAAGA,IACbQ,EAAeC,EAAKT,GACpB1W,EAAIyV,EAAW9V,MAAMK,EACrBH,EAAI4V,EAAW9V,MAAME,EACrBwL,EAAOoK,EAAW9V,MAAM0L,KACxBC,EAAOmK,EAAW9V,MAAM2L,KACxBmK,EAAW9V,MAAMK,EAAIkX,EAAalX,EAClCyV,EAAW9V,MAAME,EAAIqX,EAAarX,EAClC4V,EAAW9V,MAAM0L,KAAO6L,EAAa7L,KACrCoK,EAAW9V,MAAM2L,KAAO4L,EAAa5L,KAChCpO,KAAKwB,SAASqS,iBAAiB0E,EAAW9V,QAI7C8V,EAAW9V,MAAMK,EAAIA,EACrByV,EAAW9V,MAAME,EAAIA,EACrB4V,EAAW9V,MAAM0L,KAAOA,EACxBoK,EAAW9V,MAAM2L,KAAOA,IANxBmK,EAAWzF,UACXmH,EAAKxG,OAAO+F,EAAI,EAAGS,EAAKva,OAAS,EAAI8Z,IAQzC,OAAIS,EAAKva,OAAS,IAChBM,KAAK+Z,iBAAiBxa,IACf,wBAzOZwD,EAAAA,sDAJOmX,KAiPRqF,EApPA,GCAA,IAAAO,EAAA,WAqDE,SAAAA,EAAY9I,EAA8CxV,EAA8CsK,GAAA9L,KAAA8L,KAAAA,EACtG9L,KAAKgX,aAAeA,EACpBhX,KAAKwB,SAAWA,EAChBxB,KAAK2a,UAAY,CACfnR,QAAS,EACTE,QAAS,GAEX1J,KAAK+f,WAAa,CAAC,EAAG,EAAG,EAAG,GAC5B/f,KAAK6a,sBAAwB,CAAC5T,GAAG,EAAOD,GAAG,EAAOxH,GAAG,EAAOF,GAAG,GAmYnE,OAhYEwgB,EAAAlgB,UAAA6B,QAAA,WACMzB,KAAKwB,SAASsJ,cAChB9K,KAAKwB,SAASsJ,sBAET9K,KAAKgX,oBACLhX,KAAKwB,UAGdse,EAAAlgB,UAAAod,UAAA,SAAUhW,GAAV,IAAAiE,EAAAjL,KACMgH,EAAEiW,OAAqB,IAAZjW,EAAEiW,QAGbjd,KAAKwB,SAAS2J,QAAQrE,WAAa9G,KAAKwB,SAAS2J,QAAQrE,UAAUH,OACrE3G,KAAKwB,SAAS2J,QAAQrE,UAAUH,MAAM3G,KAAKgX,aAAa/U,KAAMjC,KAAKgX,aAAchQ,GAEnFA,EAAEyF,kBACFzF,EAAEwF,iBACFxM,KAAKkd,aAAeld,KAAKmd,SAAS3R,KAAKxL,MACvCA,KAAKod,iBAAmBpd,KAAKqd,SAAS7R,KAAKxL,MAC3CA,KAAK8L,KAAKC,mBAAiB,WACzBd,EAAKqS,UAAYrS,EAAK+L,aAAa5L,SAASC,OAAO,WAAY,YAAaJ,EAAKiS,cACjFjS,EAAKsS,UAAYtS,EAAKzJ,SAAS4J,SAASC,OAAOJ,EAAKzJ,SAAS8J,GAAI,YAAaL,EAAKiS,iBAErFld,KAAKwd,QAAUxd,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,UAAWrL,KAAKod,kBAC7Epd,KAAKyd,WAAazd,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAAcrL,KAAKod,kBACnFpd,KAAK0d,aAAe1d,KAAKgX,aAAa5L,SAASC,OAAO,SAAU,OAAQrL,KAAKod,kBAC7Epd,KAAK2d,SAAW3d,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,WAAYrL,KAAKod,kBAC/Epd,KAAK4d,YAAc5d,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,cAAerL,KAAKod,kBAErFpd,KAAKgX,aAAa5L,SAASmE,SAASvP,KAAKgX,aAAa1L,GAAI,0BAC1DtL,KAAK2a,UAAUnR,QAAUxC,EAAEwC,QAC3BxJ,KAAK2a,UAAUjR,QAAU1C,EAAE0C,QAC3B1J,KAAKqN,KAAOrN,KAAKgX,aAAa3J,KAC9BrN,KAAK0N,IAAM1N,KAAKgX,aAAatJ,IAC7B1N,KAAK6d,gBAAkB7W,EAAEwC,QACzBxJ,KAAK8d,gBAAkB9W,EAAE0C,QACzB1J,KAAKgP,MAAQhP,KAAKgX,aAAahI,MAC/BhP,KAAKiP,OAASjP,KAAKgX,aAAa/H,OAChCjP,KAAKggB,OAAShgB,KAAKgX,aAAatJ,IAAM1N,KAAKgX,aAAa/H,OACxDjP,KAAKigB,MAAQjgB,KAAKgX,aAAa3J,KAAOrN,KAAKgX,aAAahI,MACxDhP,KAAKqE,OAASrE,KAAKwB,SAASG,SAAS0C,OACrCrE,KAAK8a,WAAa9a,KAAKwB,SAAS8J,GAAGgC,WAAatN,KAAKwB,SAAS8J,GAAGwP,WACjE9a,KAAK+a,UAAY/a,KAAKwB,SAAS8J,GAAGqC,UAAY3N,KAAKwB,SAAS8J,GAAGyP,UAC/D/a,KAAK+d,SAAW/W,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAKqN,KACnDrN,KAAKkgB,UAAYlZ,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAKigB,MACpDjgB,KAAKge,QAAUhX,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAK0N,IACjD1N,KAAKmgB,WAAanZ,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAKggB,OACpDhgB,KAAKogB,UAAYpgB,KAAKwB,SAAS+T,kBAAkBvV,KAAKgX,aAAavU,MAAMyB,aAAelE,KAAKwB,SAASG,SAASuC,aAC3GlE,KAAKqE,OACTrE,KAAKqgB,SAAWrgB,KAAKwB,SAAS8T,kBAAkBtV,KAAKgX,aAAavU,MAAMwB,aAAejE,KAAKwB,SAASG,SAASsC,aAC1GjE,KAAKqE,OACTrE,KAAKwB,SAASqJ,WAAa7K,KAAKgX,aAAavU,MAC7CzC,KAAKwB,SAASsJ,eACd9K,KAAKuT,KAAO,IAAIwD,EAAa/W,KAAKgX,cAClChX,KAAKsgB,WAAa,IAAIf,EAAmBvf,KAAKgX,cAC9ChX,KAAKwB,SAASsP,gBAAiB,EAC/B9Q,KAAKwB,SAASqR,aAEV7L,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GACrGtK,KAAK6a,sBAAsBrb,GAAI,EAC/BQ,KAAKugB,kBAAoBvgB,KAAKwgB,SACrBxZ,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,EACxGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAKygB,UAE9BzgB,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK0gB,SAEvB1Z,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5GtK,KAAK6a,sBAAsBvb,GAAI,EAC/BU,KAAKugB,kBAAoBvgB,KAAK2gB,SACrB3Z,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,EACxGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK0gB,UAE9B1gB,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAKygB,SAEvBzZ,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,EACzGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsBrb,GAAI,EAC/BQ,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAK4gB,WAE9B5gB,KAAK6a,sBAAsBrb,GAAI,EAC/BQ,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK6gB,UAEvB7Z,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,EACzGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsBrb,GAAI,EAC/BQ,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK6gB,WAE9B7gB,KAAK6a,sBAAsBrb,GAAI,EAC/BQ,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAK4gB,UAEvB5Z,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,EACzGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsBvb,GAAI,EAC/BU,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAK8gB,WAE9B9gB,KAAK6a,sBAAsBvb,GAAI,EAC/BU,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK+gB,UAEvB/Z,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,IACzGtK,KAAKwB,SAASG,SAAS6G,UAAYpH,EAASE,KAC9CtB,KAAK6a,sBAAsBvb,GAAI,EAC/BU,KAAK6a,sBAAsB5T,GAAI,EAC/BjH,KAAKugB,kBAAoBvgB,KAAK+gB,WAE9B/gB,KAAK6a,sBAAsBvb,GAAI,EAC/BU,KAAK6a,sBAAsB7T,GAAI,EAC/BhH,KAAKugB,kBAAoBvgB,KAAK8gB,aAKpChB,EAAAlgB,UAAAud,SAAA,SAASnW,GAAT,IAAAiE,EAAAjL,KACEgH,EAAEyF,kBACFzF,EAAEwF,iBACF/D,EAAcc,gBAAgBvC,GAC9BhH,KAAK+a,UAAY/a,KAAKwB,SAAS8J,GAAGqC,UAAY3N,KAAKwB,SAAS8J,GAAGyP,UAC/D/a,KAAK8a,WAAa9a,KAAKwB,SAAS8J,GAAGgC,WAAatN,KAAKwB,SAAS8J,GAAGwP,WACjEJ,EAAO1a,KAAKwB,SAAUxB,KAAKqN,KAAMrN,KAAK0N,IAAK1N,KAAKgP,MAAOhP,KAAKiP,OAAQjI,EAAGhH,KAAK2a,UAAW3a,KAAKugB,kBAAkB/U,KAAKxL,OAAO,EACxHA,KAAK6a,2BAED3U,EAAQlG,KAAKwB,SAAS2J,QAAQjF,OAAS,EAC7ClG,KAAKugB,kBAAkB,CACrB/W,QAASxJ,KAAK6d,iBAAmB7W,EAAEwC,QAAUxJ,KAAK6d,iBAAmB3X,EACrEwD,QAAS1J,KAAK8d,iBAAmB9W,EAAE0C,QAAU1J,KAAK8d,iBAAmB5X,IAGvElG,KAAK2a,UAAUnR,QAAUxC,EAAEwC,QAC3BxJ,KAAK2a,UAAUjR,QAAU1C,EAAE0C,QAC3B1J,KAAK8L,KAAKsS,KAAG,WACXnT,EAAKzJ,SAASqR,iBAIlBiN,EAAAlgB,UAAAyd,SAAA,SAASrW,GAAT,IAAAiE,EAAAjL,KACEgH,EAAEyF,kBACFzF,EAAEwF,iBACFsP,IACA9b,KAAKsd,YACLtd,KAAKwd,UACLxd,KAAKyd,aACLzd,KAAK0d,eACL1d,KAAKud,YACLvd,KAAK2d,WACL3d,KAAK4d,cACL5d,KAAKwB,SAASsP,gBAAiB,EAC/B9Q,KAAKwB,SAASqR,aACV7S,KAAKwB,SAAS2J,QAAQrE,WAAa9G,KAAKwB,SAAS2J,QAAQrE,UAAUJ,KACrE2X,QAAQC,QAAQte,KAAKwB,SAAS2J,QAAQrE,UAAUJ,KAAK1G,KAAKgX,aAAa/U,KAAMjC,KAAKgX,aAAchQ,IAC7FuX,KAAKve,KAAKghB,WAAWxV,KAAKxL,MAAOA,KAAKihB,aAAazV,KAAKxL,OAE3DA,KAAKghB,aAEP1X,YAAU,WACR2B,EAAK+L,aAAa5L,SAASuE,YAAY1E,EAAK+L,aAAa1L,GAAI,0BACzDL,EAAKzJ,WACPyJ,EAAKzJ,SAASqJ,WAAa,KAC3BI,EAAKzJ,SAASsJ,oBAKpBgV,EAAAlgB,UAAAqhB,aAAA,WACEjhB,KAAKgX,aAAavU,MAAM0L,KAAOnO,KAAKgX,aAAa/U,KAAKkM,MAAQ,EAC9DnO,KAAKgX,aAAavU,MAAM2L,KAAOpO,KAAKgX,aAAa/U,KAAKmM,MAAQ,EAC9DpO,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKgX,aAAa/U,KAAKa,GAAK,EACxD9C,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKgX,aAAa/U,KAAKU,GAAK,EACxD3C,KAAKgX,aAAalE,UAClB9S,KAAKuT,KAAK+E,eACVtY,KAAKsgB,WAAWhI,eAChBtY,KAAKuT,KAAK9R,iBACHzB,KAAKuT,KACZvT,KAAKsgB,WAAW7e,iBACTzB,KAAKsgB,YAGdR,EAAAlgB,UAAAohB,WAAA,WACEhhB,KAAKgX,aAAalE,UAClB9S,KAAKgX,aAAayB,iBAAiBzY,KAAKgX,aAAavU,MAAOzC,KAAKgX,aAAa/U,MAC9EjC,KAAKuT,KAAKiF,iBACVxY,KAAKsgB,WAAW9H,iBAChBxY,KAAKuT,KAAK9R,iBACHzB,KAAKuT,KACZvT,KAAKsgB,WAAW7e,iBACTzB,KAAKsgB,YAGdR,EAAAlgB,UAAA4gB,QAAA,SAAQxZ,GAQN,GAPAhH,KAAK0N,IAAM1G,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAKge,QAC7Che,KAAKiP,OAASjP,KAAKggB,OAAShgB,KAAK0N,IAC7B1N,KAAKogB,UAAYpgB,KAAKiP,SACxBjP,KAAKiP,OAASjP,KAAKogB,UACnBpgB,KAAK0N,IAAM1N,KAAKggB,OAAShgB,KAAKogB,WAEhCpgB,KAAKkhB,YAAclhB,KAAKwB,SAAS0M,kBAAkBlO,KAAK0N,IAAM1N,KAAKqE,OAAQ2J,KAAKC,OAC5EjO,KAAKgX,aAAavU,MAAME,IAAM3C,KAAKkhB,YAAa,CAOlD,GANAlhB,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAME,EAC7C3C,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAM2L,KAC7CpO,KAAKgX,aAAavU,MAAM2L,MAAQpO,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKkhB,YACjElhB,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKkhB,YACjClhB,KAAKsgB,WAAW9Y,UAAUxH,KAAKsgB,WAAWxI,WAC1C9X,KAAKuT,KAAK/L,UAAUxH,KAAKuT,KAAKuE,UAAW9X,KAAKwB,SAASG,SAAS+F,qBAC5D1H,KAAKwB,SAASqB,eAAe7C,KAAKgX,aAAavU,OAKjD,OAJAzC,KAAKgX,aAAavU,MAAME,EAAI3C,KAAK+f,WAAW,GAC5C/f,KAAKgX,aAAavU,MAAM2L,KAAOpO,KAAK+f,WAAW,GAC/C/f,KAAKmhB,WAAWnhB,KAAKwB,SAAS+T,kBAAkBvV,KAAKgX,aAAavU,MAAME,SACxE3C,KAAKohB,cAAcphB,KAAKwB,SAAS+T,kBAAkBvV,KAAKgX,aAAavU,MAAM2L,MAAQpO,KAAKqE,QAGxFrE,KAAKwB,SAASsJ,eAEhB9K,KAAKsgB,WAAW5H,gBAChB1Y,KAAKuT,KAAKmF,gBAEZ1Y,KAAKmhB,WAAWnhB,KAAK0N,KACrB1N,KAAKohB,cAAcphB,KAAKiP,SAG1B6Q,EAAAlgB,UAAA8gB,QAAA,SAAQ1Z,GAQN,GAPAhH,KAAKqN,KAAOrG,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAK+d,SAC/C/d,KAAKgP,MAAQhP,KAAKigB,MAAQjgB,KAAKqN,KAC3BrN,KAAKqgB,SAAWrgB,KAAKgP,QACvBhP,KAAKgP,MAAQhP,KAAKqgB,SAClBrgB,KAAKqN,KAAOrN,KAAKigB,MAAQjgB,KAAKqgB,UAEhCrgB,KAAKkhB,YAAclhB,KAAKwB,SAASuM,kBAAkB/N,KAAKqN,KAAOrN,KAAKqE,OAAQ2J,KAAKC,OAC7EjO,KAAKgX,aAAavU,MAAMK,IAAM9C,KAAKkhB,YAAa,CAOlD,GANAlhB,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAMK,EAC7C9C,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAM0L,KAC7CnO,KAAKgX,aAAavU,MAAM0L,MAAQnO,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKkhB,YACjElhB,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKkhB,YACjClhB,KAAKsgB,WAAW9Y,UAAUxH,KAAKsgB,WAAW/I,UAC1CvX,KAAKuT,KAAK/L,UAAUxH,KAAKuT,KAAKgE,SAAUvX,KAAKwB,SAASG,SAAS+F,qBAC3D1H,KAAKwB,SAASqB,eAAe7C,KAAKgX,aAAavU,OAKjD,OAJAzC,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAK+f,WAAW,GAC5C/f,KAAKgX,aAAavU,MAAM0L,KAAOnO,KAAK+f,WAAW,GAC/C/f,KAAKqhB,YAAYrhB,KAAKwB,SAAS8T,kBAAkBtV,KAAKgX,aAAavU,MAAMK,SACzE9C,KAAKshB,aAAathB,KAAKwB,SAAS8T,kBAAkBtV,KAAKgX,aAAavU,MAAM0L,MAAQnO,KAAKqE,QAGvFrE,KAAKwB,SAASsJ,eAEhB9K,KAAKsgB,WAAW5H,gBAChB1Y,KAAKuT,KAAKmF,gBAEZ1Y,KAAKqhB,YAAYrhB,KAAKqN,MACtBrN,KAAKshB,aAAathB,KAAKgP,QAGzB8Q,EAAAlgB,UAAA+gB,QAAA,SAAQ3Z,GAON,GANAhH,KAAKiP,OAASjI,EAAE0C,QAAU1J,KAAK+a,UAAY/a,KAAKmgB,WAAangB,KAAK0N,IAC9D1N,KAAKogB,UAAYpgB,KAAKiP,SACxBjP,KAAKiP,OAASjP,KAAKogB,WAErBpgB,KAAKggB,OAAShgB,KAAK0N,IAAM1N,KAAKiP,OAC9BjP,KAAKkhB,YAAclhB,KAAKwB,SAAS0M,kBAAkBlO,KAAKggB,OAAQhS,KAAKuT,MAChEvhB,KAAKgX,aAAavU,MAAME,EAAI3C,KAAKgX,aAAavU,MAAM2L,OAAUpO,KAAKkhB,YAAa,CAKnF,GAJAlhB,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAM2L,KAC7CpO,KAAKgX,aAAavU,MAAM2L,KAAOpO,KAAKkhB,YAAclhB,KAAKgX,aAAavU,MAAME,EAC1E3C,KAAKsgB,WAAW9Y,UAAUxH,KAAKsgB,WAAWzI,WAC1C7X,KAAKuT,KAAK/L,UAAUxH,KAAKuT,KAAKsE,UAAW7X,KAAKwB,SAASG,SAAS+F,qBAC5D1H,KAAKwB,SAASqB,eAAe7C,KAAKgX,aAAavU,OAGjD,OAFAzC,KAAKgX,aAAavU,MAAM2L,KAAOpO,KAAK+f,WAAW,QAC/C/f,KAAKohB,cAAcphB,KAAKwB,SAAS+T,kBAAkBvV,KAAKgX,aAAavU,MAAM2L,MAAQpO,KAAKqE,QAGxFrE,KAAKwB,SAASsJ,eAEhB9K,KAAKsgB,WAAW5H,gBAChB1Y,KAAKuT,KAAKmF,gBAEZ1Y,KAAKohB,cAAcphB,KAAKiP,SAG1B6Q,EAAAlgB,UAAA6gB,QAAA,SAAQzZ,GAON,GANAhH,KAAKgP,MAAQhI,EAAEwC,QAAUxJ,KAAK8a,WAAa9a,KAAKkgB,UAAYlgB,KAAKqN,KAC7DrN,KAAKqgB,SAAWrgB,KAAKgP,QACvBhP,KAAKgP,MAAQhP,KAAKqgB,UAEpBrgB,KAAKigB,MAAQjgB,KAAKqN,KAAOrN,KAAKgP,MAC9BhP,KAAKkhB,YAAclhB,KAAKwB,SAASuM,kBAAkB/N,KAAKigB,MAAOjS,KAAKuT,MAC/DvhB,KAAKgX,aAAavU,MAAMK,EAAI9C,KAAKgX,aAAavU,MAAM0L,OAAUnO,KAAKkhB,YAAa,CAKnF,GAJAlhB,KAAK+f,WAAW,GAAK/f,KAAKgX,aAAavU,MAAM0L,KAC7CnO,KAAKgX,aAAavU,MAAM0L,KAAOnO,KAAKkhB,YAAclhB,KAAKgX,aAAavU,MAAMK,EAC1E9C,KAAKsgB,WAAW9Y,UAAUxH,KAAKsgB,WAAW1I,UAC1C5X,KAAKuT,KAAK/L,UAAUxH,KAAKuT,KAAKqE,SAAU5X,KAAKwB,SAASG,SAAS+F,qBAC3D1H,KAAKwB,SAASqB,eAAe7C,KAAKgX,aAAavU,OAGjD,OAFAzC,KAAKgX,aAAavU,MAAM0L,KAAOnO,KAAK+f,WAAW,QAC/C/f,KAAKshB,aAAathB,KAAKwB,SAAS8T,kBAAkBtV,KAAKgX,aAAavU,MAAM0L,MAAQnO,KAAKqE,QAGvFrE,KAAKwB,SAASsJ,eAEhB9K,KAAKsgB,WAAW5H,gBAChB1Y,KAAKuT,KAAKmF,gBAEZ1Y,KAAKshB,aAAathB,KAAKgP,QAGzB8Q,EAAAlgB,UAAAihB,SAAA,SAAS7Z,GACPhH,KAAKwgB,QAAQxZ,GACbhH,KAAK0gB,QAAQ1Z,IAGf8Y,EAAAlgB,UAAAghB,SAAA,SAAS5Z,GACPhH,KAAKwgB,QAAQxZ,GACbhH,KAAKygB,QAAQzZ,IAGf8Y,EAAAlgB,UAAAmhB,SAAA,SAAS/Z,GACPhH,KAAK2gB,QAAQ3Z,GACbhH,KAAK0gB,QAAQ1Z,IAGf8Y,EAAAlgB,UAAAkhB,SAAA,SAAS9Z,GACPhH,KAAK2gB,QAAQ3Z,GACbhH,KAAKygB,QAAQzZ,IAGf8Y,EAAAlgB,UAAAoT,OAAA,WACEhT,KAAKwhB,cAAgBxhB,KAAKgX,aAAayI,gBAGzCK,EAAAlgB,UAAAof,eAAA,SAAehY,GAAf,IAAAiE,EAAAjL,KAEE,GADAyI,EAAcc,gBAAgBvC,GACzBhH,KAAKwB,SAASG,SAASmF,UAAUT,eAIhC4C,EAAUK,YAAU,WACxB2B,EAAK+R,UAAUhW,GACfyX,MACCze,KAAKwB,SAASG,SAASmF,UAAUT,YAC9B4Y,EAAcjf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,UAAWoT,GACvES,EAAmBlf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAAcoT,GAC/Ef,EAAe1d,KAAKgX,aAAa5L,SAASC,OAAO,SAAU,OAAQoT,GACnEU,EAAkBnf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,aAItE,SAAoB+T,GAClB3W,EAAcc,gBAAgB6V,IAC1BpR,KAAKM,IAAI8Q,EAAU5V,QAAUxC,EAAEwC,SAAW,GAAKwE,KAAKM,IAAI8Q,EAAU1V,QAAU1C,EAAE0C,SAAW,IAC3F+U,OANEY,EAAiBrf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,WAAYoT,GAC3Ea,EAAoBtf,KAAKgX,aAAa5L,SAASC,OAAO,WAAY,cAAeoT,QAZrFze,KAAKgd,UAAUhW,GAqBjB,SAASyX,IACPpV,aAAaJ,GACbyU,IACAuB,IACAC,IACAC,IACAE,IACAC,MAIJQ,EAAAlgB,UAAAuhB,WAAA,SAAWzT,GACT1N,KAAKwB,SAAS+L,aAAa2B,gBAAgBlP,KAAKgX,aAAa5L,SAAUpL,KAAKgX,aAAa1L,GAAItL,KAAKqN,KAAMK,IAG1GoS,EAAAlgB,UAAAyhB,YAAA,SAAYhU,GACVrN,KAAKwB,SAAS+L,aAAa2B,gBAAgBlP,KAAKgX,aAAa5L,SAAUpL,KAAKgX,aAAa1L,GAAI+B,EAAMrN,KAAK0N,MAG1GoS,EAAAlgB,UAAAwhB,cAAA,SAAcnS,GACZjP,KAAKgX,aAAa5L,SAASuD,SAAS3O,KAAKgX,aAAa1L,GAAI,SAAU2D,EAAS,OAG/E6Q,EAAAlgB,UAAA0hB,aAAA,SAAatS,GACXhP,KAAKgX,aAAa5L,SAASuD,SAAS3O,KAAKgX,aAAa1L,GAAI,QAAS0D,EAAQ,2BAnb9EjM,EAAAA,sDAROmX,SAFAlX,SADY6T,EAAAA,UAgcpBiJ,EAhcA,GCAA,IAAA2B,EAAA,WA6BE,SAAAA,EAAgCnW,EAAiB9J,EAAuD4J,EAA6CU,GAA7C9L,KAAAoL,SAAAA,EAA6CpL,KAAA8L,KAAAA,EACnJ9L,KAAKsL,GAAKA,EAAGiF,cACbvQ,KAAKyC,MAAQ,CACX0L,MAAO,EACPC,MAAO,EACPtL,GAAI,EACJH,GAAI,GAEN3C,KAAKwB,SAAWA,EAChBxB,KAAK+S,KAAO,IAAI8J,EAAkB7c,KAAMwB,EAAUxB,KAAK8L,MACvD9L,KAAKyR,OAAS,IAAIqO,EAAkB9f,KAAMwB,EAAUxB,KAAK8L,MA0G7D,OAvGE2V,EAAA7hB,UAAAuR,SAAA,WACEnR,KAAKgL,gBACLhL,KAAKwB,SAAS0R,QAAQlT,OAGxByhB,EAAA7hB,UAAAoL,cAAA,WACEhL,KAAKyC,MAAQgG,EAAcC,MAAM1I,KAAKyC,MAAOzC,KAAKiC,KAAM,CACtDkM,UAAMpJ,EACNqJ,UAAMrJ,EACNjC,OAAGiC,EACHpC,OAAGoC,EACH2c,iBAAa3c,EACbyc,mBAAezc,EACfrC,oBAAgBqC,EAChBf,iBAAae,EACbb,iBAAaa,EACbhB,iBAAagB,EACbd,iBAAac,EACbX,iBAAaW,EACbZ,iBAAaY,KAIjB0c,EAAA7hB,UAAAyS,YAAA,WACErS,KAAKwB,SAASgS,WAAWxT,aAClBA,KAAKwB,SACZxB,KAAK+S,KAAKtR,iBACHzB,KAAK+S,KACZ/S,KAAKyR,OAAOhQ,iBACLzB,KAAKyR,QAGdgQ,EAAA7hB,UAAAkT,QAAA,WACE9S,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,UAAWtL,KAAKyS,UAAY,GAAK,SACjEzS,KAAKwB,SAAS+L,aAAaiB,WAAWxO,KAAKsL,GAAItL,KAAKyC,MAAOzC,KAAKoL,UAChEpL,KAAK2hB,kBAGPF,EAAA7hB,UAAA+hB,eAAA,eACQjU,EAAM1N,KAAKyC,MAAME,EAAI3C,KAAKwB,SAASuN,aACnC1B,EAAOrN,KAAKyC,MAAMK,EAAI9C,KAAKwB,SAASsN,YACpCE,EAAQhP,KAAKyC,MAAM0L,KAAOnO,KAAKwB,SAASsN,YAAc9O,KAAKwB,SAASG,SAAS0C,OAC7E4K,EAASjP,KAAKyC,MAAM2L,KAAOpO,KAAKwB,SAASuN,aAAe/O,KAAKwB,SAASG,SAAS0C,QAEhFrE,KAAK4hB,MAAQ5S,EAAQ,GAAKC,EAAS,IACtCjP,KAAK4hB,MAAO,EACR5hB,KAAKiC,KAAK6C,cACZ9E,KAAKiC,KAAK6C,aAAa9E,KAAKiC,KAAMjC,MAEhCA,KAAKwB,SAAS2J,QAAQ/F,kBACxBpF,KAAKwB,SAAS2J,QAAQ/F,iBAAiBpF,KAAKiC,KAAMjC,MAEhDA,KAAKwB,SAASG,SAASyG,kBACzBpI,KAAKsL,GAAGuW,gBAAe,IAGvB7S,IAAUhP,KAAKgP,OAASC,IAAWjP,KAAKiP,SAC1CjP,KAAKgP,MAAQA,EACbhP,KAAKiP,OAASA,EACVjP,KAAKwB,SAAS2J,QAAQhG,oBACxBnF,KAAKwB,SAAS2J,QAAQhG,mBAAmBnF,KAAKiC,KAAMjC,OAGxDA,KAAK0N,IAAMA,EACX1N,KAAKqN,KAAOA,GAGdoU,EAAA7hB,UAAAgD,YAAA,WACM5C,KAAKwB,SAAS2J,QAAQjG,oBACxBlF,KAAKwB,SAAS2J,QAAQjG,mBAAmBlF,KAAKiC,KAAMjC,OAIxDyhB,EAAA7hB,UAAA6Y,iBAAA,SAAiBqJ,EAAwBC,GACnCD,EAAS1T,OAAS2T,EAAS3T,MAAQ0T,EAAS3T,OAAS4T,EAAS5T,MAAQ2T,EAAShf,IAAMif,EAASjf,GAAKgf,EAASnf,IAAMof,EAASpf,IAG3H3C,KAAKwB,SAASqB,eAAe7C,KAAKyC,QACpCzC,KAAKyC,MAAMK,EAAIif,EAASjf,GAAK,EAC7B9C,KAAKyC,MAAME,EAAIof,EAASpf,GAAK,EAC7B3C,KAAKyC,MAAM0L,KAAO4T,EAAS5T,MAAQ,EACnCnO,KAAKyC,MAAM2L,KAAO2T,EAAS3T,MAAQ,EACnCpO,KAAK8S,YAEL9S,KAAKiC,KAAKkM,KAAOnO,KAAKyC,MAAM0L,KAC5BnO,KAAKiC,KAAKmM,KAAOpO,KAAKyC,MAAM2L,KAC5BpO,KAAKiC,KAAKa,EAAI9C,KAAKyC,MAAMK,EACzB9C,KAAKiC,KAAKU,EAAI3C,KAAKyC,MAAME,EACzB3C,KAAKwB,SAASmP,0BACd3Q,KAAK4C,iBAIT6e,EAAA7hB,UAAAyZ,aAAA,WACE,OAAQrZ,KAAKwB,SAASiN,cACQ1J,IAA3B/E,KAAKyC,MAAMif,YAA4B1hB,KAAKwB,SAASG,SAASyE,UAAUE,QAAUtG,KAAKyC,MAAMif,cAGlGD,EAAA7hB,UAAA6f,aAAA,WACE,OAAQzf,KAAKwB,SAASiN,cACU1J,IAA7B/E,KAAKyC,MAAM+e,cAA8BxhB,KAAKwB,SAASG,SAASmF,UAAUR,QAAUtG,KAAKyC,MAAM+e,oCArIrGtL,EAAAA,UAAS/M,KAAA,CAAC,CACTgN,SAAU,gBACVC,SAAA,82DAEAC,cAAeC,EAAAA,kBAAkB3V,khDAbhB4V,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KA6BdC,EAAAA,OAAMvN,KAAA,CAACoN,EAAAA,qBAtBdjG,SAP+DqG,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA6BCC,EAAAA,OAAMvN,KAAA,CAACwN,EAAAA,oBA7B5CE,EAAAA,OAAML,WAAA,CAAA,CAAAC,KA6B8EC,EAAAA,OAAMvN,KAAA,CAAC0N,EAAAA,2CAbpIC,EAAAA,SAiIH2K,EAjJA,GCAA,IAAAO,EAAA,WAcE,SAAAA,EAAiC1W,EAAiB9J,EAAuD4J,GAAApL,KAAAoL,SAAAA,EACvGpL,KAAKsL,GAAKA,EAAGiF,cACbvQ,KAAKwB,SAAWA,EAChBxB,KAAKwB,SAASsJ,aAAe9K,KAAK8K,aAAaU,KAAKxL,MAoBxD,OAjBEgiB,EAAApiB,UAAAyS,YAAA,kBACSrS,KAAKsL,UACLtL,KAAKwB,SAASsJ,oBACd9K,KAAKwB,UAGdwgB,EAAApiB,UAAAkL,aAAA,SAAaiI,GACN/S,KAAKwB,SAASqJ,YAGb7K,KAAKwB,SAASwP,SAAW+B,GAC3B/S,KAAKwB,SAASwP,QAAQhP,iBAAiBhC,KAAKwB,SAASqJ,YAEvD7K,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,UAAW,SAC3CtL,KAAKwB,SAAS+L,aAAaiB,WAAWxO,KAAKsL,GAAItL,KAAKwB,SAASqJ,WAAY7K,KAAKoL,WAN9EpL,KAAKoL,SAASuD,SAAS3O,KAAKsL,GAAI,UAAW,yBAxBhD4K,EAAAA,UAAS/M,KAAA,CAAC,CACTgN,SAAU,mBACVC,SAAU,GAEVC,cAAeC,EAAAA,kBAAkB3V,yIARhB4V,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAcdC,EAAAA,OAAMvN,KAAA,CAACoN,EAAAA,qBAZdjG,SAFwCqG,EAAAA,UAASH,WAAA,CAAA,CAAAC,KAcyBC,EAAAA,OAAMvN,KAAA,CAACwN,EAAAA,gBAuBzFqL,EArCA,GCAA,IAAAC,EAAA,WAOA,SAAAA,KAeA,2BAfCC,EAAAA,SAAQ/Y,KAAA,CAAC,CACRgZ,aAAc,CACZ7R,EACAmR,EACAO,GAEFI,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAChS,EAAmBmR,GAC7Bc,UAAW,GACXC,UAAW,GACXC,gBAAiB,CAACnS,EAAmBmR,OAGvCQ,EAtBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport enum DirTypes {\n  LTR = 'ltr',\n  RTL = 'rtl'\n}\n\nexport type dirTypes = 'ltr' | 'rtl';\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  scale?: number;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  dirType?: dirTypes;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {CompactType, DirTypes, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  scale: 1, // scale param to zoom in/zoom out\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false,  // disable auto-position of items on conflict state,\n  dirType: DirTypes.LTR, // page direction, rtl=right to left ltr= left to right, if you use rtl language set dirType to rtl\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getPixelsX(e: any, rect: ClientRect): number {\n    const scale = this.gridster.options.scale;\n    if (scale) {\n      return (e.clientX - rect.left) / scale + this.gridster.el.scrollLeft - this.gridster.gridRenderer.getLeftMargin();\n    }\n    return e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.gridRenderer.getLeftMargin();\n  }\n\n  getPixelsY(e: any, rect: ClientRect): number {\n    const scale = this.gridster.options.scale;\n    if (scale) {\n      return (e.clientY - rect.top) / scale + this.gridster.el.scrollTop - this.gridster.gridRenderer.getTopMargin();\n    }\n    return e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.gridRenderer.getTopMargin();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = this.getPixelsX(e, rect);\n    const y = this.getPixelsY(e, rect);\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes, GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.curWidth / item.cols) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): { left?: string, transform?: string } {\n    const dPosition = this.gridster.$options.dirType === DirTypes.RTL ? -d : d;\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + dPosition + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + dPosition) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): { top?: string, transform?: string } {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    const xPosition = this.gridster.$options.dirType === DirTypes.RTL ? -x : x;\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + xPosition + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + xPosition + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterCompact} from './gridsterCompact.service';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2,\n              @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef,\n              @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width;\n    let height;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows;\n    let columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1;\n    let widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = GridsterComponent.getNewArrayLength(this.columns, this.curWidth, this.curColWidth);\n    this.gridRows.length = GridsterComponent.getNewArrayLength(this.rows, this.curHeight, this.curRowHeight);\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0;\n    let colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: (x: number) => number, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries.\n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1;\n    let widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n  private static getNewArrayLength(length: number, overallSize: number, size: number): number {\n    const newLength = Math.max(length, Math.floor(overallSize / size));\n\n    if (newLength < 0) {\n      return 0;\n    }\n\n    return newLength || 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  originalClientX: number;\n  originalClientY: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  mousedown: () => void;\n  touchstart: () => void;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.diffLeft = (e.clientX - this.gridster.el.scrollWidth + this.gridsterItem.left);\n    } else {\n      this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    }\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    if (this.gridster.options.scale) {\n      this.calculateItemPositionWithScale(e, this.gridster.options.scale);\n    } else {\n      this.calculateItemPositionWithoutScale(e);\n    }\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  calculateItemPositionWithScale(e: any, scale: number): void {\n    this.left = this.originalClientX + ((e.clientX - this.originalClientX) / scale) + this.offsetLeft - this.diffLeft;\n    this.top = this.originalClientY + ((e.clientY - this.originalClientY) / scale)  + this.offsetTop - this.diffTop;\n  }\n\n  calculateItemPositionWithoutScale(e: any): void {\n    if (this.gridster.$options.dirType === DirTypes.RTL) {\n      this.left = this.gridster.el.scrollWidth - e.clientX + this.diffLeft;\n    } else {\n      this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    }\n\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {DirTypes} from './gridsterConfig.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterUtils} from './gridsterUtils.service';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: (e: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: () => void;\n  mouseup: () => void;\n  mouseleave: () => void;\n  cancelOnBlur: () => void;\n  touchmove: () => void;\n  touchend: () => void;\n  touchcancel: () => void;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  originalClientX: number;\n  originalClientY: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    if (e.which && e.which !== 1) {\n      return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.originalClientX = e.clientX;\n    this.originalClientY = e.clientY;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      } else {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleW;\n      } else {\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleNW;\n      } else {\n        this.resizeEventScrollType.n = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleNE;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      }\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      if (this.gridster.$options.dirType === DirTypes.RTL) {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.w = true;\n        this.directionFunction = this.handleSW;\n      } else {\n        this.resizeEventScrollType.s = true;\n        this.resizeEventScrollType.e = true;\n        this.directionFunction = this.handleSE;\n      }\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n\n    const scale = this.gridster.options.scale || 1;\n    this.directionFunction({\n      clientX: this.originalClientX + (e.clientX - this.originalClientX) / scale,\n      clientY: this.originalClientY + (e.clientY - this.originalClientY) / scale\n    });\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n","import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}