/**
 * @fileoverview added by tsickle
 * Generated from: lib/gridsterItemComponent.interface.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
export class GridsterItemComponentInterface {
}
if (false) {
    /** @type {?} */
    GridsterItemComponentInterface.prototype.item;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.$item;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.top;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.left;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.width;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.height;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.drag;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.resize;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.notPlaced;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.updateOptions;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.itemChanged;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.setSize;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.checkItemChanges;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.canBeDragged;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.canBeResized;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.el;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.gridster;
    /** @type {?} */
    GridsterItemComponentInterface.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZHN0ZXJJdGVtQ29tcG9uZW50LmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItZ3JpZHN0ZXIyLyIsInNvdXJjZXMiOlsibGliL2dyaWRzdGVySXRlbUNvbXBvbmVudC5pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFNQSxNQUFNLE9BQWdCLDhCQUE4QjtDQW1CbkQ7OztJQWxCQyw4Q0FBbUI7O0lBQ25CLCtDQUFvQjs7SUFDcEIsNkNBQVk7O0lBQ1osOENBQWE7O0lBQ2IsK0NBQWM7O0lBQ2QsZ0RBQWU7O0lBQ2YsOENBQXdCOztJQUN4QixnREFBMEI7O0lBQzFCLG1EQUFtQjs7SUFDbkIsdURBQTBCOztJQUMxQixxREFBd0I7O0lBQ3hCLGlEQUFvQjs7SUFDcEIsMERBQTJFOztJQUMzRSxzREFBNEI7O0lBQzVCLHNEQUE0Qjs7SUFDNUIsNENBQVE7O0lBQ1Isa0RBQXFDOztJQUNyQyxrREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0dyaWRzdGVySXRlbX0gZnJvbSAnLi9ncmlkc3Rlckl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7R3JpZHN0ZXJEcmFnZ2FibGV9IGZyb20gJy4vZ3JpZHN0ZXJEcmFnZ2FibGUuc2VydmljZSc7XG5pbXBvcnQge1JlbmRlcmVyMn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0dyaWRzdGVyUmVzaXphYmxlfSBmcm9tICcuL2dyaWRzdGVyUmVzaXphYmxlLnNlcnZpY2UnO1xuaW1wb3J0IHtHcmlkc3RlckNvbXBvbmVudEludGVyZmFjZX0gZnJvbSAnLi9ncmlkc3Rlci5pbnRlcmZhY2UnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgR3JpZHN0ZXJJdGVtQ29tcG9uZW50SW50ZXJmYWNlIHtcbiAgaXRlbTogR3JpZHN0ZXJJdGVtO1xuICAkaXRlbTogR3JpZHN0ZXJJdGVtO1xuICB0b3A6IG51bWJlcjtcbiAgbGVmdDogbnVtYmVyO1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgZHJhZzogR3JpZHN0ZXJEcmFnZ2FibGU7XG4gIHJlc2l6ZTogR3JpZHN0ZXJSZXNpemFibGU7XG4gIG5vdFBsYWNlZDogYm9vbGVhbjtcbiAgdXBkYXRlT3B0aW9uczogKCkgPT4gdm9pZDtcbiAgaXRlbUNoYW5nZWQ6ICgpID0+IHZvaWQ7XG4gIHNldFNpemU6ICgpID0+IHZvaWQ7XG4gIGNoZWNrSXRlbUNoYW5nZXM6IChuZXdWYWx1ZTogR3JpZHN0ZXJJdGVtLCBvbGRWYWx1ZTogR3JpZHN0ZXJJdGVtKSA9PiB2b2lkO1xuICBjYW5CZURyYWdnZWQ6ICgpID0+IGJvb2xlYW47XG4gIGNhbkJlUmVzaXplZDogKCkgPT4gYm9vbGVhbjtcbiAgZWw6IGFueTtcbiAgZ3JpZHN0ZXI6IEdyaWRzdGVyQ29tcG9uZW50SW50ZXJmYWNlO1xuICByZW5kZXJlcjogUmVuZGVyZXIyO1xufVxuIl19