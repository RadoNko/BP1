(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('css-element-queries')) :
    typeof define === 'function' && define.amd ? define('angular-resize-event', ['exports', '@angular/common', '@angular/core', 'css-element-queries'], factory) :
    (factory((global['angular-resize-event'] = {}),global.ng.common,global.ng.core,global['css-element-queries']));
}(this, (function (exports,common,core,cssElementQueries) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/resized-event.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ResizedEvent = /** @class */ (function () {
        function ResizedEvent(element, newWidth, newHeight, oldWidth, oldHeight) {
            this.element = element;
            this.newWidth = newWidth;
            this.newHeight = newHeight;
            this.oldWidth = oldWidth;
            this.oldHeight = oldHeight;
        }
        return ResizedEvent;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/resized.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ResizedDirective = /** @class */ (function () {
        function ResizedDirective(element) {
            this.element = element;
            this.resized = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        ResizedDirective.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                // only initialize resize watching if sensor is available
                if (cssElementQueries.ResizeSensor) {
                    this.resizeSensor = new cssElementQueries.ResizeSensor(this.element.nativeElement, ( /**
                     * @return {?}
                     */function () { return _this.onResized(); }));
                }
            };
        /**
         * @return {?}
         */
        ResizedDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.resizeSensor) {
                    this.resizeSensor.detach();
                }
            };
        /**
         * @private
         * @return {?}
         */
        ResizedDirective.prototype.onResized = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var newWidth = this.element.nativeElement.clientWidth;
                /** @type {?} */
                var newHeight = this.element.nativeElement.clientHeight;
                if (newWidth === this.oldWidth && newHeight === this.oldHeight) {
                    return;
                }
                /** @type {?} */
                var event = new ResizedEvent(this.element, newWidth, newHeight, this.oldWidth, this.oldHeight);
                this.oldWidth = this.element.nativeElement.clientWidth;
                this.oldHeight = this.element.nativeElement.clientHeight;
                this.resized.emit(event);
            };
        ResizedDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[resized]'
                    },] }
        ];
        /** @nocollapse */
        ResizedDirective.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        ResizedDirective.propDecorators = {
            resized: [{ type: core.Output }]
        };
        return ResizedDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/angular-resized-event.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AngularResizedEventModule = /** @class */ (function () {
        function AngularResizedEventModule() {
        }
        AngularResizedEventModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [ResizedDirective],
                        imports: [common.CommonModule],
                        exports: [ResizedDirective]
                    },] }
        ];
        return AngularResizedEventModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: index.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: angular-resize-event.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.AngularResizedEventModule = AngularResizedEventModule;
    exports.ResizedEvent = ResizedEvent;
    exports.ResizedDirective = ResizedDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=angular-resize-event.umd.js.map